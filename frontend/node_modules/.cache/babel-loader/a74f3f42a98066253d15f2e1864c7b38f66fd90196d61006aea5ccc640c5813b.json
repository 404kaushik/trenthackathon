{"ast":null,"code":"var _jsxFileName = \"/Users/kaushiknag/trenthackathon/frontend/src/components/Main/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [firstname, setFirstname] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchFirstname = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\n        if (!token) {\n          navigate('/login'); // Redirect to login if no token is found\n          return;\n        }\n        const response = await axios.get('/api/users/firstname', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setFirstname(response.data.firstname);\n      } catch (error) {\n        console.error('Error fetching firstname:', error);\n        navigate('/login'); // Redirect to login on error\n      }\n    };\n    fetchFirstname();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Hello, \", firstname]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n_s(Main, \"lxwcQl92RgNUe6kCwO4VG0rtWA4=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Main","_s","firstname","setFirstname","navigate","fetchFirstname","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kaushiknag/trenthackathon/frontend/src/components/Main/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Main = () => {\n  const [firstname, setFirstname] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchFirstname = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Assuming you store the token in localStorage\n        if (!token) {\n          navigate('/login'); // Redirect to login if no token is found\n          return;\n        }\n\n        const response = await axios.get('/api/users/firstname', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setFirstname(response.data.firstname);\n      } catch (error) {\n        console.error('Error fetching firstname:', error);\n        navigate('/login'); // Redirect to login on error\n      }\n    };\n\n    fetchFirstname();\n  }, [navigate]);\n\n  return <h1>Hello, {firstname}</h1>;\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAI,CAACF,KAAK,EAAE;UACVF,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;UACpB;QACF;QAEA,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,sBAAsB,EAAE;UACvDC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACFH,YAAY,CAACM,QAAQ,CAACI,IAAI,CAACX,SAAS,CAAC;MACvC,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDV,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB;IACF,CAAC;IAEDC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAOL,OAAA;IAAAiB,QAAA,GAAI,SAAO,EAACd,SAAS;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACpC,CAAC;AAACnB,EAAA,CA7BID,IAAI;EAAA,QAESH,WAAW;AAAA;AAAAwB,EAAA,GAFxBrB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}