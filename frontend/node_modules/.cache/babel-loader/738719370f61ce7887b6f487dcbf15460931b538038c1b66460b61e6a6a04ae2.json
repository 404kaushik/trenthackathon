{"ast":null,"code":"var _jsxFileName = \"/Users/kaushiknag/trenthackathon/src/pages/Stars.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stars = ({\n  starCount = 1000\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create stars\n    const starGeometry = new THREE.BufferGeometry();\n    const starMaterial = new THREE.PointsMaterial({\n      color: 0xffffff\n    });\n    const starVertices = [];\n    for (let i = 0; i < starCount; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = (Math.random() - 0.5) * 2000;\n      starVertices.push(x, y, z);\n    }\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\n    const stars = new THREE.Points(starGeometry, starMaterial);\n    scene.add(stars);\n\n    // Create shooting stars\n    const shootingStarGeometry = new THREE.BufferGeometry();\n    const shootingStarMaterial = new THREE.LineBasicMaterial({\n      color: 0xffffff\n    });\n    const shootingStars = [];\n    const createShootingStar = () => {\n      const x = Math.random() * 4000 - 2000;\n      const y = Math.random() * 4000 - 2000;\n      const z = -2000;\n      const length = Math.random() * 100 + 100;\n      const positions = new Float32Array([x, y, z, x + length, y - length, z + length]);\n      shootingStarGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n      const shootingStar = new THREE.Line(shootingStarGeometry, shootingStarMaterial);\n      scene.add(shootingStar);\n      shootingStars.push({\n        star: shootingStar,\n        speed: Math.random() * 0.1 + 0.1\n      });\n    };\n    for (let i = 0; i < 5; i++) {\n      createShootingStar();\n    }\n    camera.position.z = 500;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      stars.rotation.x += 0.0005;\n      stars.rotation.y += 0.0005;\n      shootingStars.forEach(({\n        star,\n        speed\n      }) => {\n        star.position.z += speed;\n        if (star.position.z > 2000) {\n          star.position.z = -2000;\n        }\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [starCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: -1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n_s(Stars, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = Stars;\nexport default Stars;\nvar _c;\n$RefreshReg$(_c, \"Stars\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","Stars","starCount","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","setSize","current","appendChild","domElement","starGeometry","BufferGeometry","starMaterial","PointsMaterial","color","starVertices","i","x","Math","random","y","z","push","setAttribute","Float32BufferAttribute","stars","Points","add","shootingStarGeometry","shootingStarMaterial","LineBasicMaterial","shootingStars","createShootingStar","length","positions","Float32Array","BufferAttribute","shootingStar","Line","star","speed","position","animate","requestAnimationFrame","rotation","forEach","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","style","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kaushiknag/trenthackathon/src/pages/Stars.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst Stars = ({ starCount = 1000 }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create stars\n    const starGeometry = new THREE.BufferGeometry();\n    const starMaterial = new THREE.PointsMaterial({ color: 0xffffff });\n\n    const starVertices = [];\n    for (let i = 0; i < starCount; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = (Math.random() - 0.5) * 2000;\n      starVertices.push(x, y, z);\n    }\n\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\n    const stars = new THREE.Points(starGeometry, starMaterial);\n    scene.add(stars);\n\n    // Create shooting stars\n    const shootingStarGeometry = new THREE.BufferGeometry();\n    const shootingStarMaterial = new THREE.LineBasicMaterial({ color: 0xffffff });\n\n    const shootingStars = [];\n    const createShootingStar = () => {\n      const x = Math.random() * 4000 - 2000;\n      const y = Math.random() * 4000 - 2000;\n      const z = -2000;\n      const length = Math.random() * 100 + 100;\n\n      const positions = new Float32Array([x, y, z, x + length, y - length, z + length]);\n\n      shootingStarGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n      const shootingStar = new THREE.Line(shootingStarGeometry, shootingStarMaterial);\n      scene.add(shootingStar);\n\n      shootingStars.push({ star: shootingStar, speed: Math.random() * 0.1 + 0.1 });\n    };\n\n    for (let i = 0; i < 5; i++) {\n      createShootingStar();\n    }\n\n    camera.position.z = 500;\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      stars.rotation.x += 0.0005;\n      stars.rotation.y += 0.0005;\n\n      shootingStars.forEach(({ star, speed }) => {\n        star.position.z += speed;\n        if (star.position.z > 2000) {\n          star.position.z = -2000;\n        }\n      });\n\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [starCount]);\n\n  return <div ref={mountRef} style={{ position: 'fixed', top: 0, left: 0, zIndex: -1 }} />;\n};\n\nexport default Stars;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}