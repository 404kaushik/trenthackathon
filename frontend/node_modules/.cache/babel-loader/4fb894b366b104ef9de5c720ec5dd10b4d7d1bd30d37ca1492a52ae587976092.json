{"ast":null,"code":"/*\n  @license\n\tRollup.js v4.18.0\n\tWed, 22 May 2024 05:03:09 GMT - commit bb6f069ea3623b0297ef3895f2dcb98a2ca5ef58\n\n\thttps://github.com/rollup/rollup\n\n\tReleased under the MIT License.\n*/\nimport { parse, parseAsync } from '../../native.js';\nimport { resolve, basename, extname, dirname } from 'node:path';\n\n// This file is generated by scripts/generate-node-types.js.\n// Do not edit this file directly.\nconst ArrowFunctionExpression = 'ArrowFunctionExpression';\nconst BlockStatement = 'BlockStatement';\nconst CallExpression = 'CallExpression';\nconst CatchClause = 'CatchClause';\nconst ExportDefaultDeclaration = 'ExportDefaultDeclaration';\nconst ExpressionStatement = 'ExpressionStatement';\nconst Identifier = 'Identifier';\nconst Literal = 'Literal';\nconst PanicError = 'PanicError';\nconst ParseError = 'ParseError';\nconst Program = 'Program';\nconst Property = 'Property';\nconst ReturnStatement = 'ReturnStatement';\nconst TemplateLiteral = 'TemplateLiteral';\nconst VariableDeclarator = 'VariableDeclarator';\nconst BLANK = Object.freeze(Object.create(null));\nconst EMPTY_OBJECT = Object.freeze({});\nconst EMPTY_ARRAY = Object.freeze([]);\nconst EMPTY_SET = Object.freeze(new class extends Set {\n  add() {\n    throw new Error('Cannot add to empty set');\n  }\n}());\n\n// This file is generated by scripts/generate-string-constants.js.\n// Do not edit this file directly.\nconst FIXED_STRINGS = ['var', 'let', 'const', 'init', 'get', 'set', 'constructor', 'method', '-', '+', '!', '~', 'typeof', 'void', 'delete', '++', '--', '==', '!=', '===', '!==', '<', '<=', '>', '>=', '<<', '>>', '>>>', '+', '-', '*', '/', '%', '|', '^', '&', '||', '&&', 'in', 'instanceof', '**', '??', '=', '+=', '-=', '*=', '/=', '%=', '<<=', '>>=', '>>>=', '|=', '^=', '&=', '**=', '&&=', '||=', '??=', 'pure', 'noSideEffects', 'sourcemap', 'using', 'await using'];\nconst ANNOTATION_KEY = '_rollupAnnotations';\nconst INVALID_ANNOTATION_KEY = '_rollupRemoved';\nconst convertAnnotations = (position, buffer) => {\n  if (position === 0) return EMPTY_ARRAY;\n  const length = buffer[position++];\n  const list = [];\n  for (let index = 0; index < length; index++) {\n    list.push(convertAnnotation(buffer[position++], buffer));\n  }\n  return list;\n};\nconst convertAnnotation = (position, buffer) => {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const type = FIXED_STRINGS[buffer[position]];\n  return {\n    end,\n    start,\n    type\n  };\n};\nconst convertString = (position, buffer, readString) => {\n  const length = buffer[position++];\n  const bytePosition = position << 2;\n  return readString(bytePosition, length);\n};\n\n/** @typedef {import('./types').Location} Location */\n\n/**\n * @param {import('./types').Range} range\n * @param {number} index\n */\nfunction rangeContains(range, index) {\n  return range.start <= index && index < range.end;\n}\n\n/**\n * @param {string} source\n * @param {import('./types').Options} [options]\n */\nfunction getLocator(source, options = {}) {\n  const {\n    offsetLine = 0,\n    offsetColumn = 0\n  } = options;\n  let start = 0;\n  const ranges = source.split('\\n').map((line, i) => {\n    const end = start + line.length + 1;\n\n    /** @type {import('./types').Range} */\n    const range = {\n      start,\n      end,\n      line: i\n    };\n    start = end;\n    return range;\n  });\n  let i = 0;\n\n  /**\n   * @param {string | number} search\n   * @param {number} [index]\n   * @returns {Location | undefined}\n   */\n  function locator(search, index) {\n    if (typeof search === 'string') {\n      search = source.indexOf(search, index ?? 0);\n    }\n    if (search === -1) return undefined;\n    let range = ranges[i];\n    const d = search >= range.end ? 1 : -1;\n    while (range) {\n      if (rangeContains(range, search)) {\n        return {\n          line: offsetLine + range.line,\n          column: offsetColumn + search - range.start,\n          character: search\n        };\n      }\n      i += d;\n      range = ranges[i];\n    }\n  }\n  return locator;\n}\n\n/**\n * @param {string} source\n * @param {string | number} search\n * @param {import('./types').Options} [options]\n * @returns {Location | undefined}\n */\nfunction locate(source, search, options) {\n  return getLocator(source, options)(search, options && options.startIndex);\n}\nfunction spaces(index) {\n  let result = '';\n  while (index--) result += ' ';\n  return result;\n}\nfunction tabsToSpaces(value) {\n  return value.replace(/^\\t+/, match => match.split('\\t').join('  '));\n}\nconst LINE_TRUNCATE_LENGTH = 120;\nconst MIN_CHARACTERS_SHOWN_AFTER_LOCATION = 10;\nconst ELLIPSIS = '...';\nfunction getCodeFrame(source, line, column) {\n  let lines = source.split('\\n');\n  // Needed if a plugin did not generate correct sourcemaps\n  if (line > lines.length) return '';\n  const maxLineLength = Math.max(tabsToSpaces(lines[line - 1].slice(0, column)).length + MIN_CHARACTERS_SHOWN_AFTER_LOCATION + ELLIPSIS.length, LINE_TRUNCATE_LENGTH);\n  const frameStart = Math.max(0, line - 3);\n  let frameEnd = Math.min(line + 2, lines.length);\n  lines = lines.slice(frameStart, frameEnd);\n  while (!/\\S/.test(lines[lines.length - 1])) {\n    lines.pop();\n    frameEnd -= 1;\n  }\n  const digits = String(frameEnd).length;\n  return lines.map((sourceLine, index) => {\n    const isErrorLine = frameStart + index + 1 === line;\n    let lineNumber = String(index + frameStart + 1);\n    while (lineNumber.length < digits) lineNumber = ` ${lineNumber}`;\n    let displayedLine = tabsToSpaces(sourceLine);\n    if (displayedLine.length > maxLineLength) {\n      displayedLine = `${displayedLine.slice(0, maxLineLength - ELLIPSIS.length)}${ELLIPSIS}`;\n    }\n    if (isErrorLine) {\n      const indicator = spaces(digits + 2 + tabsToSpaces(sourceLine.slice(0, column)).length) + '^';\n      return `${lineNumber}: ${displayedLine}\\n${indicator}`;\n    }\n    return `${lineNumber}: ${displayedLine}`;\n  }).join('\\n');\n}\nconst LOGLEVEL_SILENT = 'silent';\nconst LOGLEVEL_ERROR = 'error';\nconst LOGLEVEL_WARN = 'warn';\nconst LOGLEVEL_INFO = 'info';\nconst LOGLEVEL_DEBUG = 'debug';\nconst logLevelPriority = {\n  [LOGLEVEL_DEBUG]: 0,\n  [LOGLEVEL_INFO]: 1,\n  [LOGLEVEL_SILENT]: 3,\n  [LOGLEVEL_WARN]: 2\n};\nconst ABSOLUTE_PATH_REGEX = /^(?:\\/|(?:[A-Za-z]:)?[/\\\\|])/;\nconst RELATIVE_PATH_REGEX = /^\\.?\\.(\\/|$)/;\nfunction isAbsolute(path) {\n  return ABSOLUTE_PATH_REGEX.test(path);\n}\nfunction isRelative(path) {\n  return RELATIVE_PATH_REGEX.test(path);\n}\nconst BACKSLASH_REGEX = /\\\\/g;\nfunction normalize(path) {\n  return path.replace(BACKSLASH_REGEX, '/');\n}\nfunction printQuotedStringList(list, verbs) {\n  const isSingleItem = list.length <= 1;\n  const quotedList = list.map(item => `\"${item}\"`);\n  let output = isSingleItem ? quotedList[0] : `${quotedList.slice(0, -1).join(', ')} and ${quotedList.slice(-1)[0]}`;\n  if (verbs) {\n    output += ` ${isSingleItem ? verbs[0] : verbs[1]}`;\n  }\n  return output;\n}\nconst ANY_SLASH_REGEX = /[/\\\\]/;\nfunction relative(from, to) {\n  const fromParts = from.split(ANY_SLASH_REGEX).filter(Boolean);\n  const toParts = to.split(ANY_SLASH_REGEX).filter(Boolean);\n  if (fromParts[0] === '.') fromParts.shift();\n  if (toParts[0] === '.') toParts.shift();\n  while (fromParts[0] && toParts[0] && fromParts[0] === toParts[0]) {\n    fromParts.shift();\n    toParts.shift();\n  }\n  while (toParts[0] === '..' && fromParts.length > 0) {\n    toParts.shift();\n    fromParts.pop();\n  }\n  while (fromParts.pop()) {\n    toParts.unshift('..');\n  }\n  return toParts.join('/');\n}\nfunction getAliasName(id) {\n  const base = basename(id);\n  return base.slice(0, Math.max(0, base.length - extname(id).length));\n}\nfunction relativeId(id) {\n  if (!isAbsolute(id)) return id;\n  return relative(resolve(), id);\n}\nfunction isPathFragment(name) {\n  // starting with \"/\", \"./\", \"../\", \"C:/\"\n  return name[0] === '/' || name[0] === '.' && (name[1] === '/' || name[1] === '.') || isAbsolute(name);\n}\nconst UPPER_DIR_REGEX = /^(\\.\\.\\/)*\\.\\.$/;\nfunction getImportPath(importerId, targetPath, stripJsExtension, ensureFileName) {\n  while (targetPath.startsWith('../')) {\n    targetPath = targetPath.slice(3);\n    importerId = '_/' + importerId;\n  }\n  let relativePath = normalize(relative(dirname(importerId), targetPath));\n  if (stripJsExtension && relativePath.endsWith('.js')) {\n    relativePath = relativePath.slice(0, -3);\n  }\n  if (ensureFileName) {\n    if (relativePath === '') return '../' + basename(targetPath);\n    if (UPPER_DIR_REGEX.test(relativePath)) {\n      return [...relativePath.split('/'), '..', basename(targetPath)].join('/');\n    }\n  }\n  return relativePath ? relativePath.startsWith('..') ? relativePath : './' + relativePath : '.';\n}\nfunction isValidUrl(url) {\n  try {\n    new URL(url);\n  } catch {\n    return false;\n  }\n  return true;\n}\nfunction getRollupUrl(snippet) {\n  return `https://rollupjs.org/${snippet}`;\n}\nfunction addTrailingSlashIfMissed(url) {\n  if (!url.endsWith('/')) {\n    return url + '/';\n  }\n  return url;\n}\n\n// troubleshooting\nconst URL_AVOIDING_EVAL = 'troubleshooting/#avoiding-eval';\nconst URL_NAME_IS_NOT_EXPORTED = 'troubleshooting/#error-name-is-not-exported-by-module';\nconst URL_THIS_IS_UNDEFINED = 'troubleshooting/#error-this-is-undefined';\nconst URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY = 'troubleshooting/#warning-treating-module-as-external-dependency';\nconst URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT = 'troubleshooting/#warning-sourcemap-is-likely-to-be-incorrect';\nconst URL_OUTPUT_AMD_ID = 'configuration-options/#output-amd-id';\nconst URL_OUTPUT_AMD_BASEPATH = 'configuration-options/#output-amd-basepath';\nconst URL_OUTPUT_DIR = 'configuration-options/#output-dir';\nconst URL_OUTPUT_EXPORTS = 'configuration-options/#output-exports';\nconst URL_OUTPUT_EXTEND = 'configuration-options/#output-extend';\nconst URL_OUTPUT_EXTERNALIMPORTATTRIBUTES = 'configuration-options/#output-externalimportattributes';\nconst URL_OUTPUT_FORMAT = 'configuration-options/#output-format';\nconst URL_OUTPUT_GENERATEDCODE = 'configuration-options/#output-generatedcode';\nconst URL_OUTPUT_GLOBALS = 'configuration-options/#output-globals';\nconst URL_OUTPUT_INLINEDYNAMICIMPORTS = 'configuration-options/#output-inlinedynamicimports';\nconst URL_OUTPUT_INTEROP = 'configuration-options/#output-interop';\nconst URL_OUTPUT_MANUALCHUNKS = 'configuration-options/#output-manualchunks';\nconst URL_OUTPUT_NAME = 'configuration-options/#output-name';\nconst URL_OUTPUT_SOURCEMAPBASEURL = 'configuration-options/#output-sourcemapbaseurl';\nconst URL_OUTPUT_SOURCEMAPFILE = 'configuration-options/#output-sourcemapfile';\nconst URL_PRESERVEENTRYSIGNATURES = 'configuration-options/#preserveentrysignatures';\nconst URL_TREESHAKE = 'configuration-options/#treeshake';\nconst URL_TREESHAKE_PURE = 'configuration-options/#pure';\nconst URL_TREESHAKE_NOSIDEEFFECTS = 'configuration-options/#no-side-effects';\nconst URL_TREESHAKE_MODULESIDEEFFECTS = 'configuration-options/#treeshake-modulesideeffects';\nconst URL_WATCH = 'configuration-options/#watch';\nfunction error(base) {\n  throw base instanceof Error ? base : getRollupError(base);\n}\nfunction getRollupError(base) {\n  augmentLogMessage(base);\n  const errorInstance = Object.assign(new Error(base.message), base);\n  Object.defineProperty(errorInstance, 'name', {\n    value: 'RollupError',\n    writable: true\n  });\n  return errorInstance;\n}\nfunction augmentCodeLocation(properties, pos, source, id) {\n  if (typeof pos === 'object') {\n    const {\n      line,\n      column\n    } = pos;\n    properties.loc = {\n      column,\n      file: id,\n      line\n    };\n  } else {\n    properties.pos = pos;\n    const location = locate(source, pos, {\n      offsetLine: 1\n    });\n    if (!location) {\n      return;\n    }\n    const {\n      line,\n      column\n    } = location;\n    properties.loc = {\n      column,\n      file: id,\n      line\n    };\n  }\n  if (properties.frame === undefined) {\n    const {\n      line,\n      column\n    } = properties.loc;\n    properties.frame = getCodeFrame(source, line, column);\n  }\n}\nconst symbolAugmented = Symbol('augmented');\nfunction augmentLogMessage(log) {\n  // Make sure to only augment the log message once\n  if (!(log.plugin || log.loc) || log[symbolAugmented]) {\n    return;\n  }\n  log[symbolAugmented] = true;\n  let prefix = '';\n  if (log.plugin) {\n    prefix += `[plugin ${log.plugin}] `;\n  }\n  const id = log.id || log.loc?.file;\n  if (id) {\n    const position = log.loc ? ` (${log.loc.line}:${log.loc.column})` : '';\n    prefix += `${relativeId(id)}${position}: `;\n  }\n  log.message = prefix + log.message;\n}\n// Error codes should be sorted alphabetically while errors should be sorted by\n// error code below\nconst ADDON_ERROR = 'ADDON_ERROR',\n  ALREADY_CLOSED = 'ALREADY_CLOSED',\n  AMBIGUOUS_EXTERNAL_NAMESPACES = 'AMBIGUOUS_EXTERNAL_NAMESPACES',\n  ANONYMOUS_PLUGIN_CACHE = 'ANONYMOUS_PLUGIN_CACHE',\n  ASSET_NOT_FINALISED = 'ASSET_NOT_FINALISED',\n  ASSET_NOT_FOUND = 'ASSET_NOT_FOUND',\n  ASSET_SOURCE_ALREADY_SET = 'ASSET_SOURCE_ALREADY_SET',\n  ASSET_SOURCE_MISSING = 'ASSET_SOURCE_MISSING',\n  BAD_LOADER = 'BAD_LOADER',\n  CANNOT_CALL_NAMESPACE = 'CANNOT_CALL_NAMESPACE',\n  CANNOT_EMIT_FROM_OPTIONS_HOOK = 'CANNOT_EMIT_FROM_OPTIONS_HOOK',\n  CHUNK_NOT_GENERATED = 'CHUNK_NOT_GENERATED',\n  CHUNK_INVALID = 'CHUNK_INVALID',\n  CIRCULAR_DEPENDENCY = 'CIRCULAR_DEPENDENCY',\n  CIRCULAR_REEXPORT = 'CIRCULAR_REEXPORT',\n  CONST_REASSIGN = 'CONST_REASSIGN',\n  CYCLIC_CROSS_CHUNK_REEXPORT = 'CYCLIC_CROSS_CHUNK_REEXPORT',\n  DEPRECATED_FEATURE = 'DEPRECATED_FEATURE',\n  DUPLICATE_ARGUMENT_NAME = 'DUPLICATE_ARGUMENT_NAME',\n  DUPLICATE_EXPORT = 'DUPLICATE_EXPORT',\n  DUPLICATE_PLUGIN_NAME = 'DUPLICATE_PLUGIN_NAME',\n  EMPTY_BUNDLE = 'EMPTY_BUNDLE',\n  EVAL = 'EVAL',\n  EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS = 'EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS',\n  EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES = 'EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES',\n  EXTERNAL_SYNTHETIC_EXPORTS = 'EXTERNAL_SYNTHETIC_EXPORTS',\n  FILE_NAME_CONFLICT = 'FILE_NAME_CONFLICT',\n  FILE_NOT_FOUND = 'FILE_NOT_FOUND',\n  FIRST_SIDE_EFFECT = 'FIRST_SIDE_EFFECT',\n  ILLEGAL_IDENTIFIER_AS_NAME = 'ILLEGAL_IDENTIFIER_AS_NAME',\n  ILLEGAL_REASSIGNMENT = 'ILLEGAL_REASSIGNMENT',\n  INCONSISTENT_IMPORT_ATTRIBUTES = 'INCONSISTENT_IMPORT_ATTRIBUTES',\n  INVALID_ANNOTATION = 'INVALID_ANNOTATION',\n  INPUT_HOOK_IN_OUTPUT_PLUGIN = 'INPUT_HOOK_IN_OUTPUT_PLUGIN',\n  INVALID_CHUNK = 'INVALID_CHUNK',\n  INVALID_EXPORT_OPTION = 'INVALID_EXPORT_OPTION',\n  INVALID_EXTERNAL_ID = 'INVALID_EXTERNAL_ID',\n  INVALID_IMPORT_ATTRIBUTE = 'INVALID_IMPORT_ATTRIBUTE',\n  INVALID_LOG_POSITION = 'INVALID_LOG_POSITION',\n  INVALID_OPTION = 'INVALID_OPTION',\n  INVALID_PLUGIN_HOOK = 'INVALID_PLUGIN_HOOK',\n  INVALID_ROLLUP_PHASE = 'INVALID_ROLLUP_PHASE',\n  INVALID_SETASSETSOURCE = 'INVALID_SETASSETSOURCE',\n  INVALID_TLA_FORMAT = 'INVALID_TLA_FORMAT',\n  MISSING_EXPORT = 'MISSING_EXPORT',\n  MISSING_GLOBAL_NAME = 'MISSING_GLOBAL_NAME',\n  MISSING_IMPLICIT_DEPENDANT = 'MISSING_IMPLICIT_DEPENDANT',\n  MISSING_NAME_OPTION_FOR_IIFE_EXPORT = 'MISSING_NAME_OPTION_FOR_IIFE_EXPORT',\n  MISSING_NODE_BUILTINS = 'MISSING_NODE_BUILTINS',\n  MISSING_OPTION = 'MISSING_OPTION',\n  MIXED_EXPORTS = 'MIXED_EXPORTS',\n  MODULE_LEVEL_DIRECTIVE = 'MODULE_LEVEL_DIRECTIVE',\n  NAMESPACE_CONFLICT = 'NAMESPACE_CONFLICT',\n  NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE = 'NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE',\n  OPTIMIZE_CHUNK_STATUS = 'OPTIMIZE_CHUNK_STATUS',\n  PARSE_ERROR = 'PARSE_ERROR',\n  PLUGIN_ERROR = 'PLUGIN_ERROR',\n  REDECLARATION_ERROR = 'REDECLARATION_ERROR',\n  SHIMMED_EXPORT = 'SHIMMED_EXPORT',\n  SOURCEMAP_BROKEN = 'SOURCEMAP_BROKEN',\n  SOURCEMAP_ERROR = 'SOURCEMAP_ERROR',\n  SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT = 'SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT',\n  THIS_IS_UNDEFINED = 'THIS_IS_UNDEFINED',\n  UNEXPECTED_NAMED_IMPORT = 'UNEXPECTED_NAMED_IMPORT',\n  UNKNOWN_OPTION = 'UNKNOWN_OPTION',\n  UNRESOLVED_ENTRY = 'UNRESOLVED_ENTRY',\n  UNRESOLVED_IMPORT = 'UNRESOLVED_IMPORT',\n  UNUSED_EXTERNAL_IMPORT = 'UNUSED_EXTERNAL_IMPORT',\n  VALIDATION_ERROR = 'VALIDATION_ERROR';\nfunction logAddonNotGenerated(message, hook, plugin) {\n  return {\n    code: ADDON_ERROR,\n    message: `Could not retrieve \"${hook}\". Check configuration of plugin \"${plugin}\".\n\\tError Message: ${message}`\n  };\n}\nfunction logAlreadyClosed() {\n  return {\n    code: ALREADY_CLOSED,\n    message: 'Bundle is already closed, no more calls to \"generate\" or \"write\" are allowed.'\n  };\n}\nfunction logAmbiguousExternalNamespaces(binding, reexportingModule, usedModule, sources) {\n  return {\n    binding,\n    code: AMBIGUOUS_EXTERNAL_NAMESPACES,\n    ids: sources,\n    message: `Ambiguous external namespace resolution: \"${relativeId(reexportingModule)}\" re-exports \"${binding}\" from one of the external modules ${printQuotedStringList(sources.map(module => relativeId(module)))}, guessing \"${relativeId(usedModule)}\".`,\n    reexporter: reexportingModule\n  };\n}\nfunction logAnonymousPluginCache() {\n  return {\n    code: ANONYMOUS_PLUGIN_CACHE,\n    message: 'A plugin is trying to use the Rollup cache but is not declaring a plugin name or cacheKey.'\n  };\n}\nfunction logAssetNotFinalisedForFileName(name) {\n  return {\n    code: ASSET_NOT_FINALISED,\n    message: `Plugin error - Unable to get file name for asset \"${name}\". Ensure that the source is set and that generate is called first. If you reference assets via import.meta.ROLLUP_FILE_URL_<referenceId>, you need to either have set their source after \"renderStart\" or need to provide an explicit \"fileName\" when emitting them.`\n  };\n}\nfunction logAssetReferenceIdNotFoundForSetSource(assetReferenceId) {\n  return {\n    code: ASSET_NOT_FOUND,\n    message: `Plugin error - Unable to set the source for unknown asset \"${assetReferenceId}\".`\n  };\n}\nfunction logAssetSourceAlreadySet(name) {\n  return {\n    code: ASSET_SOURCE_ALREADY_SET,\n    message: `Unable to set the source for asset \"${name}\", source already set.`\n  };\n}\nfunction logNoAssetSourceSet(assetName) {\n  return {\n    code: ASSET_SOURCE_MISSING,\n    message: `Plugin error creating asset \"${assetName}\" - no asset source set.`\n  };\n}\nfunction logBadLoader(id) {\n  return {\n    code: BAD_LOADER,\n    message: `Error loading \"${relativeId(id)}\": plugin load hook should return a string, a { code, map } object, or nothing/null.`\n  };\n}\nfunction logCannotCallNamespace(name) {\n  return {\n    code: CANNOT_CALL_NAMESPACE,\n    message: `Cannot call a namespace (\"${name}\").`\n  };\n}\nfunction logCannotEmitFromOptionsHook() {\n  return {\n    code: CANNOT_EMIT_FROM_OPTIONS_HOOK,\n    message: `Cannot emit files or set asset sources in the \"outputOptions\" hook, use the \"renderStart\" hook instead.`\n  };\n}\nfunction logChunkNotGeneratedForFileName(name) {\n  return {\n    code: CHUNK_NOT_GENERATED,\n    message: `Plugin error - Unable to get file name for emitted chunk \"${name}\". You can only get file names once chunks have been generated after the \"renderStart\" hook.`\n  };\n}\nfunction logChunkInvalid({\n  fileName,\n  code\n}, {\n  pos,\n  message\n}) {\n  const errorProperties = {\n    code: CHUNK_INVALID,\n    message: `Chunk \"${fileName}\" is not valid JavaScript: ${message}.`\n  };\n  augmentCodeLocation(errorProperties, pos, code, fileName);\n  return errorProperties;\n}\nfunction logCircularDependency(cyclePath) {\n  return {\n    code: CIRCULAR_DEPENDENCY,\n    ids: cyclePath,\n    message: `Circular dependency: ${cyclePath.map(relativeId).join(' -> ')}`\n  };\n}\nfunction logCircularReexport(exportName, exporter) {\n  return {\n    code: CIRCULAR_REEXPORT,\n    exporter,\n    message: `\"${exportName}\" cannot be exported from \"${relativeId(exporter)}\" as it is a reexport that references itself.`\n  };\n}\nfunction logCyclicCrossChunkReexport(exportName, exporter, reexporter, importer, preserveModules) {\n  return {\n    code: CYCLIC_CROSS_CHUNK_REEXPORT,\n    exporter,\n    id: importer,\n    message: `Export \"${exportName}\" of module \"${relativeId(exporter)}\" was reexported through module \"${relativeId(reexporter)}\" while both modules are dependencies of each other and will end up in different chunks by current Rollup settings. This scenario is not well supported at the moment as it will produce a circular dependency between chunks and will likely lead to broken execution order.\\nEither change the import in \"${relativeId(importer)}\" to point directly to the exporting module or ${preserveModules ? 'do not use \"output.preserveModules\"' : 'reconfigure \"output.manualChunks\"'} to ensure these modules end up in the same chunk.`,\n    reexporter\n  };\n}\nfunction logDeprecation(deprecation, urlSnippet, plugin) {\n  return {\n    code: DEPRECATED_FEATURE,\n    message: deprecation,\n    url: getRollupUrl(urlSnippet),\n    ...{}\n  };\n}\nfunction logConstVariableReassignError() {\n  return {\n    code: CONST_REASSIGN,\n    message: 'Cannot reassign a variable declared with `const`'\n  };\n}\nfunction logDuplicateArgumentNameError(name) {\n  return {\n    code: DUPLICATE_ARGUMENT_NAME,\n    message: `Duplicate argument name \"${name}\"`\n  };\n}\nfunction logDuplicateExportError(name) {\n  return {\n    code: DUPLICATE_EXPORT,\n    message: `Duplicate export \"${name}\"`\n  };\n}\nfunction logDuplicatePluginName(plugin) {\n  return {\n    code: DUPLICATE_PLUGIN_NAME,\n    message: `The plugin name ${plugin} is being used twice in the same build. Plugin names must be distinct or provide a cacheKey (please post an issue to the plugin if you are a plugin user).`\n  };\n}\nfunction logEmptyChunk(chunkName) {\n  return {\n    code: EMPTY_BUNDLE,\n    message: `Generated an empty chunk: \"${chunkName}\".`,\n    names: [chunkName]\n  };\n}\nfunction logEval(id) {\n  return {\n    code: EVAL,\n    id,\n    message: `Use of eval in \"${relativeId(id)}\" is strongly discouraged as it poses security risks and may cause issues with minification.`,\n    url: getRollupUrl(URL_AVOIDING_EVAL)\n  };\n}\nfunction logExternalSyntheticExports(id, importer) {\n  return {\n    code: EXTERNAL_SYNTHETIC_EXPORTS,\n    exporter: id,\n    message: `External \"${id}\" cannot have \"syntheticNamedExports\" enabled (imported by \"${relativeId(importer)}\").`\n  };\n}\nfunction logFileNameConflict(fileName) {\n  return {\n    code: FILE_NAME_CONFLICT,\n    message: `The emitted file \"${fileName}\" overwrites a previously emitted file of the same name.`\n  };\n}\nfunction logFileReferenceIdNotFoundForFilename(assetReferenceId) {\n  return {\n    code: FILE_NOT_FOUND,\n    message: `Plugin error - Unable to get file name for unknown file \"${assetReferenceId}\".`\n  };\n}\nfunction logFirstSideEffect(source, id, {\n  line,\n  column\n}) {\n  return {\n    code: FIRST_SIDE_EFFECT,\n    message: `First side effect in ${relativeId(id)} is at (${line}:${column})\\n${getCodeFrame(source, line, column)}`\n  };\n}\nfunction logIllegalIdentifierAsName(name) {\n  return {\n    code: ILLEGAL_IDENTIFIER_AS_NAME,\n    message: `Given name \"${name}\" is not a legal JS identifier. If you need this, you can try \"output.extend: true\".`,\n    url: getRollupUrl(URL_OUTPUT_EXTEND)\n  };\n}\nfunction logIllegalImportReassignment(name, importingId) {\n  return {\n    code: ILLEGAL_REASSIGNMENT,\n    message: `Illegal reassignment of import \"${name}\" in \"${relativeId(importingId)}\".`\n  };\n}\nfunction logInconsistentImportAttributes(existingAttributes, newAttributes, source, importer) {\n  return {\n    code: INCONSISTENT_IMPORT_ATTRIBUTES,\n    message: `Module \"${relativeId(importer)}\" tried to import \"${relativeId(source)}\" with ${formatAttributes(newAttributes)} attributes, but it was already imported elsewhere with ${formatAttributes(existingAttributes)} attributes. Please ensure that import attributes for the same module are always consistent.`\n  };\n}\nconst formatAttributes = attributes => {\n  const entries = Object.entries(attributes);\n  if (entries.length === 0) return 'no';\n  return entries.map(([key, value]) => `\"${key}\": \"${value}\"`).join(', ');\n};\nfunction logInvalidAnnotation(comment, id, type) {\n  return {\n    code: INVALID_ANNOTATION,\n    id,\n    message: `A comment\\n\\n\"${comment}\"\\n\\nin \"${relativeId(id)}\" contains an annotation that Rollup cannot interpret due to the position of the comment. The comment will be removed to avoid issues.`,\n    url: getRollupUrl(type === 'noSideEffects' ? URL_TREESHAKE_NOSIDEEFFECTS : URL_TREESHAKE_PURE)\n  };\n}\nfunction logInputHookInOutputPlugin(pluginName, hookName) {\n  return {\n    code: INPUT_HOOK_IN_OUTPUT_PLUGIN,\n    message: `The \"${hookName}\" hook used by the output plugin ${pluginName} is a build time hook and will not be run for that plugin. Either this plugin cannot be used as an output plugin, or it should have an option to configure it as an output plugin.`\n  };\n}\nfunction logCannotAssignModuleToChunk(moduleId, assignToAlias, currentAlias) {\n  return {\n    code: INVALID_CHUNK,\n    message: `Cannot assign \"${relativeId(moduleId)}\" to the \"${assignToAlias}\" chunk as it is already in the \"${currentAlias}\" chunk.`\n  };\n}\nfunction logInvalidExportOptionValue(optionValue) {\n  return {\n    code: INVALID_EXPORT_OPTION,\n    message: `\"output.exports\" must be \"default\", \"named\", \"none\", \"auto\", or left unspecified (defaults to \"auto\"), received \"${optionValue}\".`,\n    url: getRollupUrl(URL_OUTPUT_EXPORTS)\n  };\n}\nfunction logIncompatibleExportOptionValue(optionValue, keys, entryModule) {\n  return {\n    code: INVALID_EXPORT_OPTION,\n    message: `\"${optionValue}\" was specified for \"output.exports\", but entry module \"${relativeId(entryModule)}\" has the following exports: ${printQuotedStringList(keys)}`,\n    url: getRollupUrl(URL_OUTPUT_EXPORTS)\n  };\n}\nfunction logInternalIdCannotBeExternal(source, importer) {\n  return {\n    code: INVALID_EXTERNAL_ID,\n    message: `\"${source}\" is imported as an external by \"${relativeId(importer)}\", but is already an existing non-external module id.`\n  };\n}\nfunction logImportOptionsAreInvalid(importer) {\n  return {\n    code: INVALID_IMPORT_ATTRIBUTE,\n    message: `Rollup could not statically analyze the options argument of a dynamic import in \"${relativeId(importer)}\". Dynamic import options need to be an object with a nested attributes object.`\n  };\n}\nfunction logImportAttributeIsInvalid(importer) {\n  return {\n    code: INVALID_IMPORT_ATTRIBUTE,\n    message: `Rollup could not statically analyze an import attribute of a dynamic import in \"${relativeId(importer)}\". Import attributes need to have string keys and values. The attribute will be removed.`\n  };\n}\nfunction logInvalidLogPosition(plugin) {\n  return {\n    code: INVALID_LOG_POSITION,\n    message: `Plugin \"${plugin}\" tried to add a file position to a log or warning. This is only supported in the \"transform\" hook at the moment and will be ignored.`\n  };\n}\nfunction logInvalidOption(option, urlSnippet, explanation, value) {\n  return {\n    code: INVALID_OPTION,\n    message: `Invalid value ${value === undefined ? '' : `${JSON.stringify(value)} `}for option \"${option}\" - ${explanation}.`,\n    url: getRollupUrl(urlSnippet)\n  };\n}\nfunction logInvalidAddonPluginHook(hook, plugin) {\n  return {\n    code: INVALID_PLUGIN_HOOK,\n    hook,\n    message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a string, a function hook or an object with a \"handler\" string or function.`,\n    plugin\n  };\n}\nfunction logInvalidFunctionPluginHook(hook, plugin) {\n  return {\n    code: INVALID_PLUGIN_HOOK,\n    hook,\n    message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a function hook or an object with a \"handler\" function.`,\n    plugin\n  };\n}\nfunction logInvalidRollupPhaseForChunkEmission() {\n  return {\n    code: INVALID_ROLLUP_PHASE,\n    message: `Cannot emit chunks after module loading has finished.`\n  };\n}\nfunction logInvalidSetAssetSourceCall() {\n  return {\n    code: INVALID_SETASSETSOURCE,\n    message: `setAssetSource cannot be called in transform for caching reasons. Use emitFile with a source, or call setAssetSource in another hook.`\n  };\n}\nfunction logInvalidFormatForTopLevelAwait(id, format) {\n  return {\n    code: INVALID_TLA_FORMAT,\n    id,\n    message: `Module format \"${format}\" does not support top-level await. Use the \"es\" or \"system\" output formats rather.`\n  };\n}\nfunction logMissingEntryExport(binding, exporter) {\n  return {\n    binding,\n    code: MISSING_EXPORT,\n    exporter,\n    message: `Exported variable \"${binding}\" is not defined in \"${relativeId(exporter)}\".`,\n    url: getRollupUrl(URL_NAME_IS_NOT_EXPORTED)\n  };\n}\nfunction logMissingExport(binding, importingModule, exporter) {\n  const isJson = extname(exporter) === '.json';\n  return {\n    binding,\n    code: MISSING_EXPORT,\n    exporter,\n    id: importingModule,\n    message: `\"${binding}\" is not exported by \"${relativeId(exporter)}\", imported by \"${relativeId(importingModule)}\".${isJson ? ' (Note that you need @rollup/plugin-json to import JSON files)' : ''}`,\n    url: getRollupUrl(URL_NAME_IS_NOT_EXPORTED)\n  };\n}\nfunction logMissingGlobalName(externalId, guess) {\n  return {\n    code: MISSING_GLOBAL_NAME,\n    id: externalId,\n    message: `No name was provided for external module \"${externalId}\" in \"output.globals\" – guessing \"${guess}\".`,\n    names: [guess],\n    url: getRollupUrl(URL_OUTPUT_GLOBALS)\n  };\n}\nfunction logImplicitDependantCannotBeExternal(unresolvedId, implicitlyLoadedBefore) {\n  return {\n    code: MISSING_IMPLICIT_DEPENDANT,\n    message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" cannot be external.`\n  };\n}\nfunction logUnresolvedImplicitDependant(unresolvedId, implicitlyLoadedBefore) {\n  return {\n    code: MISSING_IMPLICIT_DEPENDANT,\n    message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" could not be resolved.`\n  };\n}\nfunction logImplicitDependantIsNotIncluded(module) {\n  const implicitDependencies = [...module.implicitlyLoadedBefore].map(dependency => relativeId(dependency.id)).sort();\n  return {\n    code: MISSING_IMPLICIT_DEPENDANT,\n    message: `Module \"${relativeId(module.id)}\" that should be implicitly loaded before ${printQuotedStringList(implicitDependencies)} is not included in the module graph. Either it was not imported by an included module or only via a tree-shaken dynamic import, or no imported bindings were used and it had otherwise no side-effects.`\n  };\n}\nfunction logMissingNameOptionForIifeExport() {\n  return {\n    code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n    message: `If you do not supply \"output.name\", you may not be able to access the exports of an IIFE bundle.`,\n    url: getRollupUrl(URL_OUTPUT_NAME)\n  };\n}\nfunction logMissingNameOptionForUmdExport() {\n  return {\n    code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n    message: 'You must supply \"output.name\" for UMD bundles that have exports so that the exports are accessible in environments without a module loader.',\n    url: getRollupUrl(URL_OUTPUT_NAME)\n  };\n}\nfunction logMissingNodeBuiltins(externalBuiltins) {\n  return {\n    code: MISSING_NODE_BUILTINS,\n    ids: externalBuiltins,\n    message: `Creating a browser bundle that depends on Node.js built-in modules (${printQuotedStringList(externalBuiltins)}). You might need to include https://github.com/FredKSchott/rollup-plugin-polyfill-node`\n  };\n}\n// eslint-disable-next-line unicorn/prevent-abbreviations\nfunction logMissingFileOrDirOption() {\n  return {\n    code: MISSING_OPTION,\n    message: 'You must specify \"output.file\" or \"output.dir\" for the build.',\n    url: getRollupUrl(URL_OUTPUT_DIR)\n  };\n}\nfunction logMixedExport(facadeModuleId, name) {\n  return {\n    code: MIXED_EXPORTS,\n    id: facadeModuleId,\n    message: `Entry module \"${relativeId(facadeModuleId)}\" is using named and default exports together. Consumers of your bundle will have to use \\`${name || 'chunk'}.default\\` to access the default export, which may not be what you want. Use \\`output.exports: \"named\"\\` to disable this warning.`,\n    url: getRollupUrl(URL_OUTPUT_EXPORTS)\n  };\n}\nfunction logModuleLevelDirective(directive, id) {\n  return {\n    code: MODULE_LEVEL_DIRECTIVE,\n    id,\n    message: `Module level directives cause errors when bundled, \"${directive}\" in \"${relativeId(id)}\" was ignored.`\n  };\n}\nfunction logNamespaceConflict(binding, reexportingModuleId, sources) {\n  return {\n    binding,\n    code: NAMESPACE_CONFLICT,\n    ids: sources,\n    message: `Conflicting namespaces: \"${relativeId(reexportingModuleId)}\" re-exports \"${binding}\" from one of the modules ${printQuotedStringList(sources.map(moduleId => relativeId(moduleId)))} (will be ignored).`,\n    reexporter: reexportingModuleId\n  };\n}\nfunction logNoTransformMapOrAstWithoutCode(pluginName) {\n  return {\n    code: NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE,\n    message: `The plugin \"${pluginName}\" returned a \"map\" or \"ast\" without returning ` + 'a \"code\". This will be ignored.'\n  };\n}\nfunction logOptimizeChunkStatus(chunks, smallChunks, pointInTime) {\n  return {\n    code: OPTIMIZE_CHUNK_STATUS,\n    message: `${pointInTime}, there are\\n` + `${chunks} chunks, of which\\n` + `${smallChunks} are below minChunkSize.`\n  };\n}\nfunction logParseError(message, pos) {\n  return {\n    code: PARSE_ERROR,\n    message,\n    pos\n  };\n}\nfunction logRedeclarationError(name) {\n  return {\n    code: REDECLARATION_ERROR,\n    message: `Identifier \"${name}\" has already been declared`\n  };\n}\nfunction logModuleParseError(error, moduleId) {\n  let message = error.message.replace(/ \\(\\d+:\\d+\\)$/, '');\n  if (moduleId.endsWith('.json')) {\n    message += ' (Note that you need @rollup/plugin-json to import JSON files)';\n  } else if (!moduleId.endsWith('.js')) {\n    message += ' (Note that you need plugins to import files that are not JavaScript)';\n  }\n  return {\n    cause: error,\n    code: PARSE_ERROR,\n    id: moduleId,\n    message,\n    stack: error.stack\n  };\n}\nfunction logPluginError(error, plugin, {\n  hook,\n  id\n} = {}) {\n  const code = error.code;\n  if (!error.pluginCode && code != null && (typeof code !== 'string' || !code.startsWith('PLUGIN_'))) {\n    error.pluginCode = code;\n  }\n  error.code = PLUGIN_ERROR;\n  error.plugin = plugin;\n  if (hook) {\n    error.hook = hook;\n  }\n  if (id) {\n    error.id = id;\n  }\n  return error;\n}\nfunction logShimmedExport(id, binding) {\n  return {\n    binding,\n    code: SHIMMED_EXPORT,\n    exporter: id,\n    message: `Missing export \"${binding}\" has been shimmed in module \"${relativeId(id)}\".`\n  };\n}\nfunction logSourcemapBroken(plugin) {\n  return {\n    code: SOURCEMAP_BROKEN,\n    message: `Sourcemap is likely to be incorrect: a plugin (${plugin}) was used to transform files, but didn't generate a sourcemap for the transformation. Consult the plugin documentation for help`,\n    plugin,\n    url: getRollupUrl(URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT)\n  };\n}\nfunction logConflictingSourcemapSources(filename) {\n  return {\n    code: SOURCEMAP_BROKEN,\n    message: `Multiple conflicting contents for sourcemap source ${filename}`\n  };\n}\nfunction logInvalidSourcemapForError(error, id, column, line, pos) {\n  return {\n    cause: error,\n    code: SOURCEMAP_ERROR,\n    id,\n    loc: {\n      column,\n      file: id,\n      line\n    },\n    message: `Error when using sourcemap for reporting an error: ${error.message}`,\n    pos\n  };\n}\nfunction logSyntheticNamedExportsNeedNamespaceExport(id, syntheticNamedExportsOption) {\n  return {\n    code: SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT,\n    exporter: id,\n    message: `Module \"${relativeId(id)}\" that is marked with \\`syntheticNamedExports: ${JSON.stringify(syntheticNamedExportsOption)}\\` needs ${typeof syntheticNamedExportsOption === 'string' && syntheticNamedExportsOption !== 'default' ? `an explicit export named \"${syntheticNamedExportsOption}\"` : 'a default export'} that does not reexport an unresolved named export of the same module.`\n  };\n}\nfunction logThisIsUndefined() {\n  return {\n    code: THIS_IS_UNDEFINED,\n    message: `The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten`,\n    url: getRollupUrl(URL_THIS_IS_UNDEFINED)\n  };\n}\nfunction logUnexpectedNamedImport(id, imported, isReexport) {\n  const importType = isReexport ? 'reexport' : 'import';\n  return {\n    code: UNEXPECTED_NAMED_IMPORT,\n    exporter: id,\n    message: `The named export \"${imported}\" was ${importType}ed from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". Either remove or change this ${importType} or change the value of the \"output.interop\" option.`,\n    url: getRollupUrl(URL_OUTPUT_INTEROP)\n  };\n}\nfunction logUnexpectedNamespaceReexport(id) {\n  return {\n    code: UNEXPECTED_NAMED_IMPORT,\n    exporter: id,\n    message: `There was a namespace \"*\" reexport from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". This will be ignored as namespace reexports only reexport named exports. If this is not intended, either remove or change this reexport or change the value of the \"output.interop\" option.`,\n    url: getRollupUrl(URL_OUTPUT_INTEROP)\n  };\n}\nfunction logUnknownOption(optionType, unknownOptions, validOptions) {\n  return {\n    code: UNKNOWN_OPTION,\n    message: `Unknown ${optionType}: ${unknownOptions.join(', ')}. Allowed options: ${validOptions.join(', ')}`\n  };\n}\nfunction logEntryCannotBeExternal(unresolvedId) {\n  return {\n    code: UNRESOLVED_ENTRY,\n    message: `Entry module \"${relativeId(unresolvedId)}\" cannot be external.`\n  };\n}\nfunction logExternalModulesCannotBeIncludedInManualChunks(source) {\n  return {\n    code: EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS,\n    message: `\"${source}\" cannot be included in manualChunks because it is resolved as an external module by the \"external\" option or plugins.`\n  };\n}\nfunction logExternalModulesCannotBeTransformedToModules(source) {\n  return {\n    code: EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES,\n    message: `${source} is resolved as a module now, but it was an external module before. Please check whether there are conflicts in your Rollup options \"external\" and \"manualChunks\", manualChunks cannot include external modules.`\n  };\n}\nfunction logUnresolvedEntry(unresolvedId) {\n  return {\n    code: UNRESOLVED_ENTRY,\n    message: `Could not resolve entry module \"${relativeId(unresolvedId)}\".`\n  };\n}\nfunction logUnresolvedImport(source, importer) {\n  return {\n    code: UNRESOLVED_IMPORT,\n    exporter: source,\n    id: importer,\n    message: `Could not resolve \"${source}\" from \"${relativeId(importer)}\"`\n  };\n}\nfunction logUnresolvedImportTreatedAsExternal(source, importer) {\n  return {\n    code: UNRESOLVED_IMPORT,\n    exporter: source,\n    id: importer,\n    message: `\"${source}\" is imported by \"${relativeId(importer)}\", but could not be resolved – treating it as an external dependency.`,\n    url: getRollupUrl(URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY)\n  };\n}\nfunction logUnusedExternalImports(externalId, names, importers) {\n  return {\n    code: UNUSED_EXTERNAL_IMPORT,\n    exporter: externalId,\n    ids: importers,\n    message: `${printQuotedStringList(names, ['is', 'are'])} imported from external module \"${externalId}\" but never used in ${printQuotedStringList(importers.map(importer => relativeId(importer)))}.`,\n    names\n  };\n}\nfunction logFailedValidation(message) {\n  return {\n    code: VALIDATION_ERROR,\n    message\n  };\n}\nfunction warnDeprecation(deprecation, urlSnippet, activeDeprecation, options, plugin) {\n  warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, options.onLog, options.strictDeprecations);\n}\nfunction warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, log, strictDeprecations, plugin) {\n  {\n    const warning = logDeprecation(deprecation, urlSnippet);\n    if (strictDeprecations) {\n      return error(warning);\n    }\n    log(LOGLEVEL_WARN, warning);\n  }\n}\n\n// This file is generated by scripts/generate-buffer-to-ast.js.\n// Do not edit this file directly.\nfunction convertProgram(buffer, readString) {\n  const node = convertNode(0, new Uint32Array(buffer), readString);\n  switch (node.type) {\n    case PanicError:\n      {\n        return error(getRollupError(logParseError(node.message)));\n      }\n    case ParseError:\n      {\n        return error(getRollupError(logParseError(node.message, node.start)));\n      }\n    default:\n      {\n        return node;\n      }\n  }\n}\n/* eslint-disable sort-keys */\nconst nodeConverters = [function panicError(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const message = convertString(buffer[position], buffer, readString);\n  return {\n    type: 'PanicError',\n    start,\n    end,\n    message\n  };\n}, function parseError(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const message = convertString(buffer[position], buffer, readString);\n  return {\n    type: 'ParseError',\n    start,\n    end,\n    message\n  };\n}, function arrayExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const elements = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'ArrayExpression',\n    start,\n    end,\n    elements\n  };\n}, function arrayPattern(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const elements = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'ArrayPattern',\n    start,\n    end,\n    elements\n  };\n}, function arrowFunctionExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const async = (flags & 1) === 1;\n  const expression = (flags & 2) === 2;\n  const generator = (flags & 4) === 4;\n  const annotations = convertAnnotations(buffer[position++], buffer);\n  const parameters = convertNodeList(buffer[position++], buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ArrowFunctionExpression',\n    start,\n    end,\n    async,\n    expression,\n    generator,\n    ...(annotations.length > 0 ? {\n      [ANNOTATION_KEY]: annotations\n    } : {}),\n    params: parameters,\n    body,\n    id: null\n  };\n}, function assignmentExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const operator = FIXED_STRINGS[buffer[position++]];\n  const left = convertNode(buffer[position++], buffer, readString);\n  const right = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'AssignmentExpression',\n    start,\n    end,\n    operator,\n    left,\n    right\n  };\n}, function assignmentPattern(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const left = convertNode(buffer[position++], buffer, readString);\n  const right = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'AssignmentPattern',\n    start,\n    end,\n    left,\n    right\n  };\n}, function awaitExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const argument = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'AwaitExpression',\n    start,\n    end,\n    argument\n  };\n}, function binaryExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const operator = FIXED_STRINGS[buffer[position++]];\n  const left = convertNode(buffer[position++], buffer, readString);\n  const right = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'BinaryExpression',\n    start,\n    end,\n    operator,\n    left,\n    right\n  };\n}, function blockStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const body = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'BlockStatement',\n    start,\n    end,\n    body\n  };\n}, function breakStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const labelPosition = buffer[position];\n  const label = labelPosition === 0 ? null : convertNode(labelPosition, buffer, readString);\n  return {\n    type: 'BreakStatement',\n    start,\n    end,\n    label\n  };\n}, function callExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const optional = (flags & 1) === 1;\n  const annotations = convertAnnotations(buffer[position++], buffer);\n  const callee = convertNode(buffer[position++], buffer, readString);\n  const callArguments = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'CallExpression',\n    start,\n    end,\n    optional,\n    ...(annotations.length > 0 ? {\n      [ANNOTATION_KEY]: annotations\n    } : {}),\n    callee,\n    arguments: callArguments\n  };\n}, function catchClause(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const parameterPosition = buffer[position++];\n  const parameter = parameterPosition === 0 ? null : convertNode(parameterPosition, buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'CatchClause',\n    start,\n    end,\n    param: parameter,\n    body\n  };\n}, function chainExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const expression = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ChainExpression',\n    start,\n    end,\n    expression\n  };\n}, function classBody(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const body = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'ClassBody',\n    start,\n    end,\n    body\n  };\n}, function classDeclaration(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const idPosition = buffer[position++];\n  const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n  const superClassPosition = buffer[position++];\n  const superClass = superClassPosition === 0 ? null : convertNode(superClassPosition, buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ClassDeclaration',\n    start,\n    end,\n    id,\n    superClass,\n    body\n  };\n}, function classExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const idPosition = buffer[position++];\n  const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n  const superClassPosition = buffer[position++];\n  const superClass = superClassPosition === 0 ? null : convertNode(superClassPosition, buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ClassExpression',\n    start,\n    end,\n    id,\n    superClass,\n    body\n  };\n}, function conditionalExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const test = convertNode(buffer[position++], buffer, readString);\n  const consequent = convertNode(buffer[position++], buffer, readString);\n  const alternate = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ConditionalExpression',\n    start,\n    end,\n    test,\n    consequent,\n    alternate\n  };\n}, function continueStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const labelPosition = buffer[position];\n  const label = labelPosition === 0 ? null : convertNode(labelPosition, buffer, readString);\n  return {\n    type: 'ContinueStatement',\n    start,\n    end,\n    label\n  };\n}, function debuggerStatement(position, buffer) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  return {\n    type: 'DebuggerStatement',\n    start,\n    end\n  };\n}, function directive(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const directive = convertString(buffer[position++], buffer, readString);\n  const expression = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ExpressionStatement',\n    start,\n    end,\n    directive,\n    expression\n  };\n}, function doWhileStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const body = convertNode(buffer[position++], buffer, readString);\n  const test = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'DoWhileStatement',\n    start,\n    end,\n    body,\n    test\n  };\n}, function emptyStatement(position, buffer) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  return {\n    type: 'EmptyStatement',\n    start,\n    end\n  };\n}, function exportAllDeclaration(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const exportedPosition = buffer[position++];\n  const exported = exportedPosition === 0 ? null : convertNode(exportedPosition, buffer, readString);\n  const source = convertNode(buffer[position++], buffer, readString);\n  const attributes = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'ExportAllDeclaration',\n    start,\n    end,\n    exported,\n    source,\n    attributes\n  };\n}, function exportDefaultDeclaration(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const declaration = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ExportDefaultDeclaration',\n    start,\n    end,\n    declaration\n  };\n}, function exportNamedDeclaration(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const specifiers = convertNodeList(buffer[position++], buffer, readString);\n  const sourcePosition = buffer[position++];\n  const source = sourcePosition === 0 ? null : convertNode(sourcePosition, buffer, readString);\n  const attributes = convertNodeList(buffer[position++], buffer, readString);\n  const declarationPosition = buffer[position];\n  const declaration = declarationPosition === 0 ? null : convertNode(declarationPosition, buffer, readString);\n  return {\n    type: 'ExportNamedDeclaration',\n    start,\n    end,\n    specifiers,\n    source,\n    attributes,\n    declaration\n  };\n}, function exportSpecifier(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const local = convertNode(buffer[position++], buffer, readString);\n  const exportedPosition = buffer[position];\n  return {\n    type: 'ExportSpecifier',\n    start,\n    end,\n    local,\n    exported: exportedPosition === 0 ? {\n      ...local\n    } : convertNode(exportedPosition, buffer, readString)\n  };\n}, function expressionStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const expression = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ExpressionStatement',\n    start,\n    end,\n    expression\n  };\n}, function forInStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const left = convertNode(buffer[position++], buffer, readString);\n  const right = convertNode(buffer[position++], buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ForInStatement',\n    start,\n    end,\n    left,\n    right,\n    body\n  };\n}, function forOfStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const awaited = (flags & 1) === 1;\n  const left = convertNode(buffer[position++], buffer, readString);\n  const right = convertNode(buffer[position++], buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ForOfStatement',\n    start,\n    end,\n    await: awaited,\n    left,\n    right,\n    body\n  };\n}, function forStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const initPosition = buffer[position++];\n  const init = initPosition === 0 ? null : convertNode(initPosition, buffer, readString);\n  const testPosition = buffer[position++];\n  const test = testPosition === 0 ? null : convertNode(testPosition, buffer, readString);\n  const updatePosition = buffer[position++];\n  const update = updatePosition === 0 ? null : convertNode(updatePosition, buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ForStatement',\n    start,\n    end,\n    init,\n    test,\n    update,\n    body\n  };\n}, function functionDeclaration(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const async = (flags & 1) === 1;\n  const generator = (flags & 2) === 2;\n  const annotations = convertAnnotations(buffer[position++], buffer);\n  const idPosition = buffer[position++];\n  const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n  const parameters = convertNodeList(buffer[position++], buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'FunctionDeclaration',\n    start,\n    end,\n    async,\n    generator,\n    ...(annotations.length > 0 ? {\n      [ANNOTATION_KEY]: annotations\n    } : {}),\n    id,\n    params: parameters,\n    body,\n    expression: false\n  };\n}, function functionExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const async = (flags & 1) === 1;\n  const generator = (flags & 2) === 2;\n  const annotations = convertAnnotations(buffer[position++], buffer);\n  const idPosition = buffer[position++];\n  const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n  const parameters = convertNodeList(buffer[position++], buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'FunctionExpression',\n    start,\n    end,\n    async,\n    generator,\n    ...(annotations.length > 0 ? {\n      [ANNOTATION_KEY]: annotations\n    } : {}),\n    id,\n    params: parameters,\n    body,\n    expression: false\n  };\n}, function identifier(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const name = convertString(buffer[position], buffer, readString);\n  return {\n    type: 'Identifier',\n    start,\n    end,\n    name\n  };\n}, function ifStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const test = convertNode(buffer[position++], buffer, readString);\n  const consequent = convertNode(buffer[position++], buffer, readString);\n  const alternatePosition = buffer[position];\n  const alternate = alternatePosition === 0 ? null : convertNode(alternatePosition, buffer, readString);\n  return {\n    type: 'IfStatement',\n    start,\n    end,\n    test,\n    consequent,\n    alternate\n  };\n}, function importAttribute(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const key = convertNode(buffer[position++], buffer, readString);\n  const value = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ImportAttribute',\n    start,\n    end,\n    key,\n    value\n  };\n}, function importDeclaration(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const specifiers = convertNodeList(buffer[position++], buffer, readString);\n  const source = convertNode(buffer[position++], buffer, readString);\n  const attributes = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'ImportDeclaration',\n    start,\n    end,\n    specifiers,\n    source,\n    attributes\n  };\n}, function importDefaultSpecifier(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const local = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ImportDefaultSpecifier',\n    start,\n    end,\n    local\n  };\n}, function importExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const source = convertNode(buffer[position++], buffer, readString);\n  const optionsPosition = buffer[position];\n  const options = optionsPosition === 0 ? null : convertNode(optionsPosition, buffer, readString);\n  return {\n    type: 'ImportExpression',\n    start,\n    end,\n    source,\n    options\n  };\n}, function importNamespaceSpecifier(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const local = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ImportNamespaceSpecifier',\n    start,\n    end,\n    local\n  };\n}, function importSpecifier(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const importedPosition = buffer[position++];\n  const local = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ImportSpecifier',\n    start,\n    end,\n    imported: importedPosition === 0 ? {\n      ...local\n    } : convertNode(importedPosition, buffer, readString),\n    local\n  };\n}, function labeledStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const label = convertNode(buffer[position++], buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'LabeledStatement',\n    start,\n    end,\n    label,\n    body\n  };\n}, function literalBigInt(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const bigint = convertString(buffer[position++], buffer, readString);\n  const raw = convertString(buffer[position], buffer, readString);\n  return {\n    type: 'Literal',\n    start,\n    end,\n    bigint,\n    raw,\n    value: BigInt(bigint)\n  };\n}, function literalBoolean(position, buffer) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const value = (flags & 1) === 1;\n  return {\n    type: 'Literal',\n    start,\n    end,\n    value,\n    raw: value ? 'true' : 'false'\n  };\n}, function literalNull(position, buffer) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  return {\n    type: 'Literal',\n    start,\n    end,\n    raw: 'null',\n    value: null\n  };\n}, function literalNumber(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const rawPosition = buffer[position++];\n  const raw = rawPosition === 0 ? undefined : convertString(rawPosition, buffer, readString);\n  const value = new DataView(buffer.buffer).getFloat64(position << 2, true);\n  return {\n    type: 'Literal',\n    start,\n    end,\n    raw,\n    value\n  };\n}, function literalRegExp(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = convertString(buffer[position++], buffer, readString);\n  const pattern = convertString(buffer[position], buffer, readString);\n  return {\n    type: 'Literal',\n    start,\n    end,\n    raw: `/${pattern}/${flags}`,\n    regex: {\n      flags,\n      pattern\n    },\n    value: new RegExp(pattern, flags)\n  };\n}, function literalString(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const value = convertString(buffer[position++], buffer, readString);\n  const rawPosition = buffer[position];\n  const raw = rawPosition === 0 ? undefined : convertString(rawPosition, buffer, readString);\n  return {\n    type: 'Literal',\n    start,\n    end,\n    value,\n    raw\n  };\n}, function logicalExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const operator = FIXED_STRINGS[buffer[position++]];\n  const left = convertNode(buffer[position++], buffer, readString);\n  const right = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'LogicalExpression',\n    start,\n    end,\n    operator,\n    left,\n    right\n  };\n}, function memberExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const computed = (flags & 1) === 1;\n  const optional = (flags & 2) === 2;\n  const object = convertNode(buffer[position++], buffer, readString);\n  const property = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'MemberExpression',\n    start,\n    end,\n    computed,\n    optional,\n    object,\n    property\n  };\n}, function metaProperty(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const meta = convertNode(buffer[position++], buffer, readString);\n  const property = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'MetaProperty',\n    start,\n    end,\n    meta,\n    property\n  };\n}, function methodDefinition(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const isStatic = (flags & 1) === 1;\n  const computed = (flags & 2) === 2;\n  const key = convertNode(buffer[position++], buffer, readString);\n  const value = convertNode(buffer[position++], buffer, readString);\n  const kind = FIXED_STRINGS[buffer[position]];\n  return {\n    type: 'MethodDefinition',\n    start,\n    end,\n    static: isStatic,\n    computed,\n    key,\n    value,\n    kind\n  };\n}, function newExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const annotations = convertAnnotations(buffer[position++], buffer);\n  const callee = convertNode(buffer[position++], buffer, readString);\n  const callArguments = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'NewExpression',\n    start,\n    end,\n    ...(annotations.length > 0 ? {\n      [ANNOTATION_KEY]: annotations\n    } : {}),\n    callee,\n    arguments: callArguments\n  };\n}, function objectExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const properties = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'ObjectExpression',\n    start,\n    end,\n    properties\n  };\n}, function objectPattern(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const properties = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'ObjectPattern',\n    start,\n    end,\n    properties\n  };\n}, function privateIdentifier(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const name = convertString(buffer[position], buffer, readString);\n  return {\n    type: 'PrivateIdentifier',\n    start,\n    end,\n    name\n  };\n}, function program(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const body = convertNodeList(buffer[position++], buffer, readString);\n  const invalidAnnotations = convertAnnotations(buffer[position], buffer);\n  return {\n    type: 'Program',\n    start,\n    end,\n    body,\n    ...(invalidAnnotations.length > 0 ? {\n      [INVALID_ANNOTATION_KEY]: invalidAnnotations\n    } : {}),\n    sourceType: 'module'\n  };\n}, function property(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const method = (flags & 1) === 1;\n  const shorthand = (flags & 2) === 2;\n  const computed = (flags & 4) === 4;\n  const keyPosition = buffer[position++];\n  const value = convertNode(buffer[position++], buffer, readString);\n  const kind = FIXED_STRINGS[buffer[position]];\n  return {\n    type: 'Property',\n    start,\n    end,\n    method,\n    shorthand,\n    computed,\n    key: keyPosition === 0 ? {\n      ...value\n    } : convertNode(keyPosition, buffer, readString),\n    value,\n    kind\n  };\n}, function propertyDefinition(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const isStatic = (flags & 1) === 1;\n  const computed = (flags & 2) === 2;\n  const key = convertNode(buffer[position++], buffer, readString);\n  const valuePosition = buffer[position];\n  const value = valuePosition === 0 ? null : convertNode(valuePosition, buffer, readString);\n  return {\n    type: 'PropertyDefinition',\n    start,\n    end,\n    static: isStatic,\n    computed,\n    key,\n    value\n  };\n}, function restElement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const argument = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'RestElement',\n    start,\n    end,\n    argument\n  };\n}, function returnStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const argumentPosition = buffer[position];\n  const argument = argumentPosition === 0 ? null : convertNode(argumentPosition, buffer, readString);\n  return {\n    type: 'ReturnStatement',\n    start,\n    end,\n    argument\n  };\n}, function sequenceExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const expressions = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'SequenceExpression',\n    start,\n    end,\n    expressions\n  };\n}, function spreadElement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const argument = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'SpreadElement',\n    start,\n    end,\n    argument\n  };\n}, function staticBlock(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const body = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'StaticBlock',\n    start,\n    end,\n    body\n  };\n}, function superElement(position, buffer) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  return {\n    type: 'Super',\n    start,\n    end\n  };\n}, function switchCase(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const testPosition = buffer[position++];\n  const test = testPosition === 0 ? null : convertNode(testPosition, buffer, readString);\n  const consequent = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'SwitchCase',\n    start,\n    end,\n    test,\n    consequent\n  };\n}, function switchStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const discriminant = convertNode(buffer[position++], buffer, readString);\n  const cases = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'SwitchStatement',\n    start,\n    end,\n    discriminant,\n    cases\n  };\n}, function taggedTemplateExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const tag = convertNode(buffer[position++], buffer, readString);\n  const quasi = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'TaggedTemplateExpression',\n    start,\n    end,\n    tag,\n    quasi\n  };\n}, function templateElement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const tail = (flags & 1) === 1;\n  const cookedPosition = buffer[position++];\n  const cooked = cookedPosition === 0 ? undefined : convertString(cookedPosition, buffer, readString);\n  const raw = convertString(buffer[position], buffer, readString);\n  return {\n    type: 'TemplateElement',\n    start,\n    end,\n    tail,\n    value: {\n      cooked,\n      raw\n    }\n  };\n}, function templateLiteral(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const quasis = convertNodeList(buffer[position++], buffer, readString);\n  const expressions = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'TemplateLiteral',\n    start,\n    end,\n    quasis,\n    expressions\n  };\n}, function thisExpression(position, buffer) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  return {\n    type: 'ThisExpression',\n    start,\n    end\n  };\n}, function throwStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const argument = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'ThrowStatement',\n    start,\n    end,\n    argument\n  };\n}, function tryStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const block = convertNode(buffer[position++], buffer, readString);\n  const handlerPosition = buffer[position++];\n  const handler = handlerPosition === 0 ? null : convertNode(handlerPosition, buffer, readString);\n  const finalizerPosition = buffer[position];\n  const finalizer = finalizerPosition === 0 ? null : convertNode(finalizerPosition, buffer, readString);\n  return {\n    type: 'TryStatement',\n    start,\n    end,\n    block,\n    handler,\n    finalizer\n  };\n}, function unaryExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const operator = FIXED_STRINGS[buffer[position++]];\n  const argument = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'UnaryExpression',\n    start,\n    end,\n    operator,\n    argument,\n    prefix: true\n  };\n}, function updateExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const prefix = (flags & 1) === 1;\n  const operator = FIXED_STRINGS[buffer[position++]];\n  const argument = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'UpdateExpression',\n    start,\n    end,\n    prefix,\n    operator,\n    argument\n  };\n}, function variableDeclaration(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const kind = FIXED_STRINGS[buffer[position++]];\n  const declarations = convertNodeList(buffer[position], buffer, readString);\n  return {\n    type: 'VariableDeclaration',\n    start,\n    end,\n    kind,\n    declarations\n  };\n}, function variableDeclarator(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const id = convertNode(buffer[position++], buffer, readString);\n  const initPosition = buffer[position];\n  const init = initPosition === 0 ? null : convertNode(initPosition, buffer, readString);\n  return {\n    type: 'VariableDeclarator',\n    start,\n    end,\n    id,\n    init\n  };\n}, function whileStatement(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const test = convertNode(buffer[position++], buffer, readString);\n  const body = convertNode(buffer[position], buffer, readString);\n  return {\n    type: 'WhileStatement',\n    start,\n    end,\n    test,\n    body\n  };\n}, function yieldExpression(position, buffer, readString) {\n  const start = buffer[position++];\n  const end = buffer[position++];\n  const flags = buffer[position++];\n  const delegate = (flags & 1) === 1;\n  const argumentPosition = buffer[position];\n  const argument = argumentPosition === 0 ? null : convertNode(argumentPosition, buffer, readString);\n  return {\n    type: 'YieldExpression',\n    start,\n    end,\n    delegate,\n    argument\n  };\n}];\nfunction convertNode(position, buffer, readString) {\n  const nodeType = buffer[position];\n  const converter = nodeConverters[nodeType];\n  /* istanbul ignore if: This should never be executed but is a safeguard against faulty buffers */\n  if (!converter) {\n    console.trace();\n    throw new Error(`Unknown node type: ${nodeType}`);\n  }\n  return converter(position + 1, buffer, readString);\n}\nfunction convertNodeList(position, buffer, readString) {\n  if (position === 0) return EMPTY_ARRAY;\n  const length = buffer[position++];\n  const list = [];\n  for (let index = 0; index < length; index++) {\n    const nodePosition = buffer[position++];\n    list.push(nodePosition ? convertNode(nodePosition, buffer, readString) : null);\n  }\n  return list;\n}\nfunction getReadStringFunction(astBuffer) {\n  if (typeof Buffer !== 'undefined' && astBuffer instanceof Buffer) {\n    return function readString(start, length) {\n      return astBuffer.toString('utf8', start, start + length);\n    };\n  } else {\n    const textDecoder = new TextDecoder();\n    return function readString(start, length) {\n      return textDecoder.decode(astBuffer.subarray(start, start + length));\n    };\n  }\n}\nconst parseAst = (input, {\n  allowReturnOutsideFunction = false\n} = {}) => {\n  const astBuffer = parse(input, allowReturnOutsideFunction);\n  return convertProgram(astBuffer.buffer, getReadStringFunction(astBuffer));\n};\nconst parseAstAsync = async (input, {\n  allowReturnOutsideFunction = false,\n  signal\n} = {}) => {\n  const astBuffer = await parseAsync(input, allowReturnOutsideFunction, signal);\n  return convertProgram(astBuffer.buffer, getReadStringFunction(astBuffer));\n};\nexport { ANNOTATION_KEY, ArrowFunctionExpression, BLANK, BlockStatement, CallExpression, CatchClause, EMPTY_ARRAY, EMPTY_OBJECT, EMPTY_SET, ExportDefaultDeclaration, ExpressionStatement, FIXED_STRINGS, INVALID_ANNOTATION_KEY, Identifier, LOGLEVEL_DEBUG, LOGLEVEL_ERROR, LOGLEVEL_INFO, LOGLEVEL_WARN, Literal, Program, Property, ReturnStatement, TemplateLiteral, URL_OUTPUT_AMD_BASEPATH, URL_OUTPUT_AMD_ID, URL_OUTPUT_DIR, URL_OUTPUT_EXTERNALIMPORTATTRIBUTES, URL_OUTPUT_FORMAT, URL_OUTPUT_GENERATEDCODE, URL_OUTPUT_INLINEDYNAMICIMPORTS, URL_OUTPUT_INTEROP, URL_OUTPUT_MANUALCHUNKS, URL_OUTPUT_SOURCEMAPBASEURL, URL_OUTPUT_SOURCEMAPFILE, URL_PRESERVEENTRYSIGNATURES, URL_TREESHAKE, URL_TREESHAKE_MODULESIDEEFFECTS, URL_WATCH, VariableDeclarator, addTrailingSlashIfMissed, augmentCodeLocation, augmentLogMessage, convertAnnotations, convertNode, convertString, error, getAliasName, getImportPath, getReadStringFunction, getRollupError, isAbsolute, isPathFragment, isRelative, isValidUrl, locate, logAddonNotGenerated, logAlreadyClosed, logAmbiguousExternalNamespaces, logAnonymousPluginCache, logAssetNotFinalisedForFileName, logAssetReferenceIdNotFoundForSetSource, logAssetSourceAlreadySet, logBadLoader, logCannotAssignModuleToChunk, logCannotCallNamespace, logCannotEmitFromOptionsHook, logChunkInvalid, logChunkNotGeneratedForFileName, logCircularDependency, logCircularReexport, logConflictingSourcemapSources, logConstVariableReassignError, logCyclicCrossChunkReexport, logDuplicateArgumentNameError, logDuplicateExportError, logDuplicatePluginName, logEmptyChunk, logEntryCannotBeExternal, logEval, logExternalModulesCannotBeIncludedInManualChunks, logExternalModulesCannotBeTransformedToModules, logExternalSyntheticExports, logFailedValidation, logFileNameConflict, logFileReferenceIdNotFoundForFilename, logFirstSideEffect, logIllegalIdentifierAsName, logIllegalImportReassignment, logImplicitDependantCannotBeExternal, logImplicitDependantIsNotIncluded, logImportAttributeIsInvalid, logImportOptionsAreInvalid, logIncompatibleExportOptionValue, logInconsistentImportAttributes, logInputHookInOutputPlugin, logInternalIdCannotBeExternal, logInvalidAddonPluginHook, logInvalidAnnotation, logInvalidExportOptionValue, logInvalidFormatForTopLevelAwait, logInvalidFunctionPluginHook, logInvalidLogPosition, logInvalidOption, logInvalidRollupPhaseForChunkEmission, logInvalidSetAssetSourceCall, logInvalidSourcemapForError, logLevelPriority, logMissingEntryExport, logMissingExport, logMissingFileOrDirOption, logMissingGlobalName, logMissingNameOptionForIifeExport, logMissingNameOptionForUmdExport, logMissingNodeBuiltins, logMixedExport, logModuleLevelDirective, logModuleParseError, logNamespaceConflict, logNoAssetSourceSet, logNoTransformMapOrAstWithoutCode, logOptimizeChunkStatus, logParseError, logPluginError, logRedeclarationError, logShimmedExport, logSourcemapBroken, logSyntheticNamedExportsNeedNamespaceExport, logThisIsUndefined, logUnexpectedNamedImport, logUnexpectedNamespaceReexport, logUnknownOption, logUnresolvedEntry, logUnresolvedImplicitDependant, logUnresolvedImport, logUnresolvedImportTreatedAsExternal, logUnusedExternalImports, normalize, parseAst, parseAstAsync, printQuotedStringList, relative, relativeId, warnDeprecation };","map":{"version":3,"names":["parse","parseAsync","resolve","basename","extname","dirname","ArrowFunctionExpression","BlockStatement","CallExpression","CatchClause","ExportDefaultDeclaration","ExpressionStatement","Identifier","Literal","PanicError","ParseError","Program","Property","ReturnStatement","TemplateLiteral","VariableDeclarator","BLANK","Object","freeze","create","EMPTY_OBJECT","EMPTY_ARRAY","EMPTY_SET","Set","add","Error","FIXED_STRINGS","ANNOTATION_KEY","INVALID_ANNOTATION_KEY","convertAnnotations","position","buffer","length","list","index","push","convertAnnotation","start","end","type","convertString","readString","bytePosition","rangeContains","range","getLocator","source","options","offsetLine","offsetColumn","ranges","split","map","line","i","locator","search","indexOf","undefined","d","column","character","locate","startIndex","spaces","result","tabsToSpaces","value","replace","match","join","LINE_TRUNCATE_LENGTH","MIN_CHARACTERS_SHOWN_AFTER_LOCATION","ELLIPSIS","getCodeFrame","lines","maxLineLength","Math","max","slice","frameStart","frameEnd","min","test","pop","digits","String","sourceLine","isErrorLine","lineNumber","displayedLine","indicator","LOGLEVEL_SILENT","LOGLEVEL_ERROR","LOGLEVEL_WARN","LOGLEVEL_INFO","LOGLEVEL_DEBUG","logLevelPriority","ABSOLUTE_PATH_REGEX","RELATIVE_PATH_REGEX","isAbsolute","path","isRelative","BACKSLASH_REGEX","normalize","printQuotedStringList","verbs","isSingleItem","quotedList","item","output","ANY_SLASH_REGEX","relative","from","to","fromParts","filter","Boolean","toParts","shift","unshift","getAliasName","id","base","relativeId","isPathFragment","name","UPPER_DIR_REGEX","getImportPath","importerId","targetPath","stripJsExtension","ensureFileName","startsWith","relativePath","endsWith","isValidUrl","url","URL","getRollupUrl","snippet","addTrailingSlashIfMissed","URL_AVOIDING_EVAL","URL_NAME_IS_NOT_EXPORTED","URL_THIS_IS_UNDEFINED","URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY","URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT","URL_OUTPUT_AMD_ID","URL_OUTPUT_AMD_BASEPATH","URL_OUTPUT_DIR","URL_OUTPUT_EXPORTS","URL_OUTPUT_EXTEND","URL_OUTPUT_EXTERNALIMPORTATTRIBUTES","URL_OUTPUT_FORMAT","URL_OUTPUT_GENERATEDCODE","URL_OUTPUT_GLOBALS","URL_OUTPUT_INLINEDYNAMICIMPORTS","URL_OUTPUT_INTEROP","URL_OUTPUT_MANUALCHUNKS","URL_OUTPUT_NAME","URL_OUTPUT_SOURCEMAPBASEURL","URL_OUTPUT_SOURCEMAPFILE","URL_PRESERVEENTRYSIGNATURES","URL_TREESHAKE","URL_TREESHAKE_PURE","URL_TREESHAKE_NOSIDEEFFECTS","URL_TREESHAKE_MODULESIDEEFFECTS","URL_WATCH","error","getRollupError","augmentLogMessage","errorInstance","assign","message","defineProperty","writable","augmentCodeLocation","properties","pos","loc","file","location","frame","symbolAugmented","Symbol","log","plugin","prefix","ADDON_ERROR","ALREADY_CLOSED","AMBIGUOUS_EXTERNAL_NAMESPACES","ANONYMOUS_PLUGIN_CACHE","ASSET_NOT_FINALISED","ASSET_NOT_FOUND","ASSET_SOURCE_ALREADY_SET","ASSET_SOURCE_MISSING","BAD_LOADER","CANNOT_CALL_NAMESPACE","CANNOT_EMIT_FROM_OPTIONS_HOOK","CHUNK_NOT_GENERATED","CHUNK_INVALID","CIRCULAR_DEPENDENCY","CIRCULAR_REEXPORT","CONST_REASSIGN","CYCLIC_CROSS_CHUNK_REEXPORT","DEPRECATED_FEATURE","DUPLICATE_ARGUMENT_NAME","DUPLICATE_EXPORT","DUPLICATE_PLUGIN_NAME","EMPTY_BUNDLE","EVAL","EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS","EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES","EXTERNAL_SYNTHETIC_EXPORTS","FILE_NAME_CONFLICT","FILE_NOT_FOUND","FIRST_SIDE_EFFECT","ILLEGAL_IDENTIFIER_AS_NAME","ILLEGAL_REASSIGNMENT","INCONSISTENT_IMPORT_ATTRIBUTES","INVALID_ANNOTATION","INPUT_HOOK_IN_OUTPUT_PLUGIN","INVALID_CHUNK","INVALID_EXPORT_OPTION","INVALID_EXTERNAL_ID","INVALID_IMPORT_ATTRIBUTE","INVALID_LOG_POSITION","INVALID_OPTION","INVALID_PLUGIN_HOOK","INVALID_ROLLUP_PHASE","INVALID_SETASSETSOURCE","INVALID_TLA_FORMAT","MISSING_EXPORT","MISSING_GLOBAL_NAME","MISSING_IMPLICIT_DEPENDANT","MISSING_NAME_OPTION_FOR_IIFE_EXPORT","MISSING_NODE_BUILTINS","MISSING_OPTION","MIXED_EXPORTS","MODULE_LEVEL_DIRECTIVE","NAMESPACE_CONFLICT","NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE","OPTIMIZE_CHUNK_STATUS","PARSE_ERROR","PLUGIN_ERROR","REDECLARATION_ERROR","SHIMMED_EXPORT","SOURCEMAP_BROKEN","SOURCEMAP_ERROR","SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT","THIS_IS_UNDEFINED","UNEXPECTED_NAMED_IMPORT","UNKNOWN_OPTION","UNRESOLVED_ENTRY","UNRESOLVED_IMPORT","UNUSED_EXTERNAL_IMPORT","VALIDATION_ERROR","logAddonNotGenerated","hook","code","logAlreadyClosed","logAmbiguousExternalNamespaces","binding","reexportingModule","usedModule","sources","ids","module","reexporter","logAnonymousPluginCache","logAssetNotFinalisedForFileName","logAssetReferenceIdNotFoundForSetSource","assetReferenceId","logAssetSourceAlreadySet","logNoAssetSourceSet","assetName","logBadLoader","logCannotCallNamespace","logCannotEmitFromOptionsHook","logChunkNotGeneratedForFileName","logChunkInvalid","fileName","errorProperties","logCircularDependency","cyclePath","logCircularReexport","exportName","exporter","logCyclicCrossChunkReexport","importer","preserveModules","logDeprecation","deprecation","urlSnippet","logConstVariableReassignError","logDuplicateArgumentNameError","logDuplicateExportError","logDuplicatePluginName","logEmptyChunk","chunkName","names","logEval","logExternalSyntheticExports","logFileNameConflict","logFileReferenceIdNotFoundForFilename","logFirstSideEffect","logIllegalIdentifierAsName","logIllegalImportReassignment","importingId","logInconsistentImportAttributes","existingAttributes","newAttributes","formatAttributes","attributes","entries","key","logInvalidAnnotation","comment","logInputHookInOutputPlugin","pluginName","hookName","logCannotAssignModuleToChunk","moduleId","assignToAlias","currentAlias","logInvalidExportOptionValue","optionValue","logIncompatibleExportOptionValue","keys","entryModule","logInternalIdCannotBeExternal","logImportOptionsAreInvalid","logImportAttributeIsInvalid","logInvalidLogPosition","logInvalidOption","option","explanation","JSON","stringify","logInvalidAddonPluginHook","logInvalidFunctionPluginHook","logInvalidRollupPhaseForChunkEmission","logInvalidSetAssetSourceCall","logInvalidFormatForTopLevelAwait","format","logMissingEntryExport","logMissingExport","importingModule","isJson","logMissingGlobalName","externalId","guess","logImplicitDependantCannotBeExternal","unresolvedId","implicitlyLoadedBefore","logUnresolvedImplicitDependant","logImplicitDependantIsNotIncluded","implicitDependencies","dependency","sort","logMissingNameOptionForIifeExport","logMissingNameOptionForUmdExport","logMissingNodeBuiltins","externalBuiltins","logMissingFileOrDirOption","logMixedExport","facadeModuleId","logModuleLevelDirective","directive","logNamespaceConflict","reexportingModuleId","logNoTransformMapOrAstWithoutCode","logOptimizeChunkStatus","chunks","smallChunks","pointInTime","logParseError","logRedeclarationError","logModuleParseError","cause","stack","logPluginError","pluginCode","logShimmedExport","logSourcemapBroken","logConflictingSourcemapSources","filename","logInvalidSourcemapForError","logSyntheticNamedExportsNeedNamespaceExport","syntheticNamedExportsOption","logThisIsUndefined","logUnexpectedNamedImport","imported","isReexport","importType","logUnexpectedNamespaceReexport","logUnknownOption","optionType","unknownOptions","validOptions","logEntryCannotBeExternal","logExternalModulesCannotBeIncludedInManualChunks","logExternalModulesCannotBeTransformedToModules","logUnresolvedEntry","logUnresolvedImport","logUnresolvedImportTreatedAsExternal","logUnusedExternalImports","importers","logFailedValidation","warnDeprecation","activeDeprecation","warnDeprecationWithOptions","onLog","strictDeprecations","warning","convertProgram","node","convertNode","Uint32Array","nodeConverters","panicError","parseError","arrayExpression","elements","convertNodeList","arrayPattern","arrowFunctionExpression","flags","async","expression","generator","annotations","parameters","body","params","assignmentExpression","operator","left","right","assignmentPattern","awaitExpression","argument","binaryExpression","blockStatement","breakStatement","labelPosition","label","callExpression","optional","callee","callArguments","arguments","catchClause","parameterPosition","parameter","param","chainExpression","classBody","classDeclaration","idPosition","superClassPosition","superClass","classExpression","conditionalExpression","consequent","alternate","continueStatement","debuggerStatement","doWhileStatement","emptyStatement","exportAllDeclaration","exportedPosition","exported","exportDefaultDeclaration","declaration","exportNamedDeclaration","specifiers","sourcePosition","declarationPosition","exportSpecifier","local","expressionStatement","forInStatement","forOfStatement","awaited","await","forStatement","initPosition","init","testPosition","updatePosition","update","functionDeclaration","functionExpression","identifier","ifStatement","alternatePosition","importAttribute","importDeclaration","importDefaultSpecifier","importExpression","optionsPosition","importNamespaceSpecifier","importSpecifier","importedPosition","labeledStatement","literalBigInt","bigint","raw","BigInt","literalBoolean","literalNull","literalNumber","rawPosition","DataView","getFloat64","literalRegExp","pattern","regex","RegExp","literalString","logicalExpression","memberExpression","computed","object","property","metaProperty","meta","methodDefinition","isStatic","kind","static","newExpression","objectExpression","objectPattern","privateIdentifier","program","invalidAnnotations","sourceType","method","shorthand","keyPosition","propertyDefinition","valuePosition","restElement","returnStatement","argumentPosition","sequenceExpression","expressions","spreadElement","staticBlock","superElement","switchCase","switchStatement","discriminant","cases","taggedTemplateExpression","tag","quasi","templateElement","tail","cookedPosition","cooked","templateLiteral","quasis","thisExpression","throwStatement","tryStatement","block","handlerPosition","handler","finalizerPosition","finalizer","unaryExpression","updateExpression","variableDeclaration","declarations","variableDeclarator","whileStatement","yieldExpression","delegate","nodeType","converter","console","trace","nodePosition","getReadStringFunction","astBuffer","Buffer","toString","textDecoder","TextDecoder","decode","subarray","parseAst","input","allowReturnOutsideFunction","parseAstAsync","signal"],"sources":["/Users/kaushiknag/node_modules/rollup/dist/es/shared/parseAst.js"],"sourcesContent":["/*\n  @license\n\tRollup.js v4.18.0\n\tWed, 22 May 2024 05:03:09 GMT - commit bb6f069ea3623b0297ef3895f2dcb98a2ca5ef58\n\n\thttps://github.com/rollup/rollup\n\n\tReleased under the MIT License.\n*/\nimport { parse, parseAsync } from '../../native.js';\nimport { resolve, basename, extname, dirname } from 'node:path';\n\n// This file is generated by scripts/generate-node-types.js.\n// Do not edit this file directly.\nconst ArrowFunctionExpression = 'ArrowFunctionExpression';\nconst BlockStatement = 'BlockStatement';\nconst CallExpression = 'CallExpression';\nconst CatchClause = 'CatchClause';\nconst ExportDefaultDeclaration = 'ExportDefaultDeclaration';\nconst ExpressionStatement = 'ExpressionStatement';\nconst Identifier = 'Identifier';\nconst Literal = 'Literal';\nconst PanicError = 'PanicError';\nconst ParseError = 'ParseError';\nconst Program = 'Program';\nconst Property = 'Property';\nconst ReturnStatement = 'ReturnStatement';\nconst TemplateLiteral = 'TemplateLiteral';\nconst VariableDeclarator = 'VariableDeclarator';\n\nconst BLANK = Object.freeze(Object.create(null));\nconst EMPTY_OBJECT = Object.freeze({});\nconst EMPTY_ARRAY = Object.freeze([]);\nconst EMPTY_SET = Object.freeze(new (class extends Set {\n    add() {\n        throw new Error('Cannot add to empty set');\n    }\n})());\n\n// This file is generated by scripts/generate-string-constants.js.\n// Do not edit this file directly.\nconst FIXED_STRINGS = [\n    'var',\n    'let',\n    'const',\n    'init',\n    'get',\n    'set',\n    'constructor',\n    'method',\n    '-',\n    '+',\n    '!',\n    '~',\n    'typeof',\n    'void',\n    'delete',\n    '++',\n    '--',\n    '==',\n    '!=',\n    '===',\n    '!==',\n    '<',\n    '<=',\n    '>',\n    '>=',\n    '<<',\n    '>>',\n    '>>>',\n    '+',\n    '-',\n    '*',\n    '/',\n    '%',\n    '|',\n    '^',\n    '&',\n    '||',\n    '&&',\n    'in',\n    'instanceof',\n    '**',\n    '??',\n    '=',\n    '+=',\n    '-=',\n    '*=',\n    '/=',\n    '%=',\n    '<<=',\n    '>>=',\n    '>>>=',\n    '|=',\n    '^=',\n    '&=',\n    '**=',\n    '&&=',\n    '||=',\n    '??=',\n    'pure',\n    'noSideEffects',\n    'sourcemap',\n    'using',\n    'await using'\n];\n\nconst ANNOTATION_KEY = '_rollupAnnotations';\nconst INVALID_ANNOTATION_KEY = '_rollupRemoved';\nconst convertAnnotations = (position, buffer) => {\n    if (position === 0)\n        return EMPTY_ARRAY;\n    const length = buffer[position++];\n    const list = [];\n    for (let index = 0; index < length; index++) {\n        list.push(convertAnnotation(buffer[position++], buffer));\n    }\n    return list;\n};\nconst convertAnnotation = (position, buffer) => {\n    const start = buffer[position++];\n    const end = buffer[position++];\n    const type = FIXED_STRINGS[buffer[position]];\n    return { end, start, type };\n};\nconst convertString = (position, buffer, readString) => {\n    const length = buffer[position++];\n    const bytePosition = position << 2;\n    return readString(bytePosition, length);\n};\n\n/** @typedef {import('./types').Location} Location */\n\n/**\n * @param {import('./types').Range} range\n * @param {number} index\n */\nfunction rangeContains(range, index) {\n\treturn range.start <= index && index < range.end;\n}\n\n/**\n * @param {string} source\n * @param {import('./types').Options} [options]\n */\nfunction getLocator(source, options = {}) {\n\tconst { offsetLine = 0, offsetColumn = 0 } = options;\n\n\tlet start = 0;\n\tconst ranges = source.split('\\n').map((line, i) => {\n\t\tconst end = start + line.length + 1;\n\n\t\t/** @type {import('./types').Range} */\n\t\tconst range = { start, end, line: i };\n\n\t\tstart = end;\n\t\treturn range;\n\t});\n\n\tlet i = 0;\n\n\t/**\n\t * @param {string | number} search\n\t * @param {number} [index]\n\t * @returns {Location | undefined}\n\t */\n\tfunction locator(search, index) {\n\t\tif (typeof search === 'string') {\n\t\t\tsearch = source.indexOf(search, index ?? 0);\n\t\t}\n\n\t\tif (search === -1) return undefined;\n\n\t\tlet range = ranges[i];\n\n\t\tconst d = search >= range.end ? 1 : -1;\n\n\t\twhile (range) {\n\t\t\tif (rangeContains(range, search)) {\n\t\t\t\treturn {\n\t\t\t\t\tline: offsetLine + range.line,\n\t\t\t\t\tcolumn: offsetColumn + search - range.start,\n\t\t\t\t\tcharacter: search\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ti += d;\n\t\t\trange = ranges[i];\n\t\t}\n\t}\n\n\treturn locator;\n}\n\n/**\n * @param {string} source\n * @param {string | number} search\n * @param {import('./types').Options} [options]\n * @returns {Location | undefined}\n */\nfunction locate(source, search, options) {\n\treturn getLocator(source, options)(search, options && options.startIndex);\n}\n\nfunction spaces(index) {\n    let result = '';\n    while (index--)\n        result += ' ';\n    return result;\n}\nfunction tabsToSpaces(value) {\n    return value.replace(/^\\t+/, match => match.split('\\t').join('  '));\n}\nconst LINE_TRUNCATE_LENGTH = 120;\nconst MIN_CHARACTERS_SHOWN_AFTER_LOCATION = 10;\nconst ELLIPSIS = '...';\nfunction getCodeFrame(source, line, column) {\n    let lines = source.split('\\n');\n    // Needed if a plugin did not generate correct sourcemaps\n    if (line > lines.length)\n        return '';\n    const maxLineLength = Math.max(tabsToSpaces(lines[line - 1].slice(0, column)).length +\n        MIN_CHARACTERS_SHOWN_AFTER_LOCATION +\n        ELLIPSIS.length, LINE_TRUNCATE_LENGTH);\n    const frameStart = Math.max(0, line - 3);\n    let frameEnd = Math.min(line + 2, lines.length);\n    lines = lines.slice(frameStart, frameEnd);\n    while (!/\\S/.test(lines[lines.length - 1])) {\n        lines.pop();\n        frameEnd -= 1;\n    }\n    const digits = String(frameEnd).length;\n    return lines\n        .map((sourceLine, index) => {\n        const isErrorLine = frameStart + index + 1 === line;\n        let lineNumber = String(index + frameStart + 1);\n        while (lineNumber.length < digits)\n            lineNumber = ` ${lineNumber}`;\n        let displayedLine = tabsToSpaces(sourceLine);\n        if (displayedLine.length > maxLineLength) {\n            displayedLine = `${displayedLine.slice(0, maxLineLength - ELLIPSIS.length)}${ELLIPSIS}`;\n        }\n        if (isErrorLine) {\n            const indicator = spaces(digits + 2 + tabsToSpaces(sourceLine.slice(0, column)).length) + '^';\n            return `${lineNumber}: ${displayedLine}\\n${indicator}`;\n        }\n        return `${lineNumber}: ${displayedLine}`;\n    })\n        .join('\\n');\n}\n\nconst LOGLEVEL_SILENT = 'silent';\nconst LOGLEVEL_ERROR = 'error';\nconst LOGLEVEL_WARN = 'warn';\nconst LOGLEVEL_INFO = 'info';\nconst LOGLEVEL_DEBUG = 'debug';\nconst logLevelPriority = {\n    [LOGLEVEL_DEBUG]: 0,\n    [LOGLEVEL_INFO]: 1,\n    [LOGLEVEL_SILENT]: 3,\n    [LOGLEVEL_WARN]: 2\n};\n\nconst ABSOLUTE_PATH_REGEX = /^(?:\\/|(?:[A-Za-z]:)?[/\\\\|])/;\nconst RELATIVE_PATH_REGEX = /^\\.?\\.(\\/|$)/;\nfunction isAbsolute(path) {\n    return ABSOLUTE_PATH_REGEX.test(path);\n}\nfunction isRelative(path) {\n    return RELATIVE_PATH_REGEX.test(path);\n}\nconst BACKSLASH_REGEX = /\\\\/g;\nfunction normalize(path) {\n    return path.replace(BACKSLASH_REGEX, '/');\n}\n\nfunction printQuotedStringList(list, verbs) {\n    const isSingleItem = list.length <= 1;\n    const quotedList = list.map(item => `\"${item}\"`);\n    let output = isSingleItem\n        ? quotedList[0]\n        : `${quotedList.slice(0, -1).join(', ')} and ${quotedList.slice(-1)[0]}`;\n    if (verbs) {\n        output += ` ${isSingleItem ? verbs[0] : verbs[1]}`;\n    }\n    return output;\n}\n\nconst ANY_SLASH_REGEX = /[/\\\\]/;\nfunction relative(from, to) {\n    const fromParts = from.split(ANY_SLASH_REGEX).filter(Boolean);\n    const toParts = to.split(ANY_SLASH_REGEX).filter(Boolean);\n    if (fromParts[0] === '.')\n        fromParts.shift();\n    if (toParts[0] === '.')\n        toParts.shift();\n    while (fromParts[0] && toParts[0] && fromParts[0] === toParts[0]) {\n        fromParts.shift();\n        toParts.shift();\n    }\n    while (toParts[0] === '..' && fromParts.length > 0) {\n        toParts.shift();\n        fromParts.pop();\n    }\n    while (fromParts.pop()) {\n        toParts.unshift('..');\n    }\n    return toParts.join('/');\n}\n\nfunction getAliasName(id) {\n    const base = basename(id);\n    return base.slice(0, Math.max(0, base.length - extname(id).length));\n}\nfunction relativeId(id) {\n    if (!isAbsolute(id))\n        return id;\n    return relative(resolve(), id);\n}\nfunction isPathFragment(name) {\n    // starting with \"/\", \"./\", \"../\", \"C:/\"\n    return (name[0] === '/' || (name[0] === '.' && (name[1] === '/' || name[1] === '.')) || isAbsolute(name));\n}\nconst UPPER_DIR_REGEX = /^(\\.\\.\\/)*\\.\\.$/;\nfunction getImportPath(importerId, targetPath, stripJsExtension, ensureFileName) {\n    while (targetPath.startsWith('../')) {\n        targetPath = targetPath.slice(3);\n        importerId = '_/' + importerId;\n    }\n    let relativePath = normalize(relative(dirname(importerId), targetPath));\n    if (stripJsExtension && relativePath.endsWith('.js')) {\n        relativePath = relativePath.slice(0, -3);\n    }\n    if (ensureFileName) {\n        if (relativePath === '')\n            return '../' + basename(targetPath);\n        if (UPPER_DIR_REGEX.test(relativePath)) {\n            return [...relativePath.split('/'), '..', basename(targetPath)].join('/');\n        }\n    }\n    return relativePath ? (relativePath.startsWith('..') ? relativePath : './' + relativePath) : '.';\n}\n\nfunction isValidUrl(url) {\n    try {\n        new URL(url);\n    }\n    catch {\n        return false;\n    }\n    return true;\n}\nfunction getRollupUrl(snippet) {\n    return `https://rollupjs.org/${snippet}`;\n}\nfunction addTrailingSlashIfMissed(url) {\n    if (!url.endsWith('/')) {\n        return url + '/';\n    }\n    return url;\n}\n\n// troubleshooting\nconst URL_AVOIDING_EVAL = 'troubleshooting/#avoiding-eval';\nconst URL_NAME_IS_NOT_EXPORTED = 'troubleshooting/#error-name-is-not-exported-by-module';\nconst URL_THIS_IS_UNDEFINED = 'troubleshooting/#error-this-is-undefined';\nconst URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY = 'troubleshooting/#warning-treating-module-as-external-dependency';\nconst URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT = 'troubleshooting/#warning-sourcemap-is-likely-to-be-incorrect';\nconst URL_OUTPUT_AMD_ID = 'configuration-options/#output-amd-id';\nconst URL_OUTPUT_AMD_BASEPATH = 'configuration-options/#output-amd-basepath';\nconst URL_OUTPUT_DIR = 'configuration-options/#output-dir';\nconst URL_OUTPUT_EXPORTS = 'configuration-options/#output-exports';\nconst URL_OUTPUT_EXTEND = 'configuration-options/#output-extend';\nconst URL_OUTPUT_EXTERNALIMPORTATTRIBUTES = 'configuration-options/#output-externalimportattributes';\nconst URL_OUTPUT_FORMAT = 'configuration-options/#output-format';\nconst URL_OUTPUT_GENERATEDCODE = 'configuration-options/#output-generatedcode';\nconst URL_OUTPUT_GLOBALS = 'configuration-options/#output-globals';\nconst URL_OUTPUT_INLINEDYNAMICIMPORTS = 'configuration-options/#output-inlinedynamicimports';\nconst URL_OUTPUT_INTEROP = 'configuration-options/#output-interop';\nconst URL_OUTPUT_MANUALCHUNKS = 'configuration-options/#output-manualchunks';\nconst URL_OUTPUT_NAME = 'configuration-options/#output-name';\nconst URL_OUTPUT_SOURCEMAPBASEURL = 'configuration-options/#output-sourcemapbaseurl';\nconst URL_OUTPUT_SOURCEMAPFILE = 'configuration-options/#output-sourcemapfile';\nconst URL_PRESERVEENTRYSIGNATURES = 'configuration-options/#preserveentrysignatures';\nconst URL_TREESHAKE = 'configuration-options/#treeshake';\nconst URL_TREESHAKE_PURE = 'configuration-options/#pure';\nconst URL_TREESHAKE_NOSIDEEFFECTS = 'configuration-options/#no-side-effects';\nconst URL_TREESHAKE_MODULESIDEEFFECTS = 'configuration-options/#treeshake-modulesideeffects';\nconst URL_WATCH = 'configuration-options/#watch';\n\nfunction error(base) {\n    throw base instanceof Error ? base : getRollupError(base);\n}\nfunction getRollupError(base) {\n    augmentLogMessage(base);\n    const errorInstance = Object.assign(new Error(base.message), base);\n    Object.defineProperty(errorInstance, 'name', {\n        value: 'RollupError',\n        writable: true\n    });\n    return errorInstance;\n}\nfunction augmentCodeLocation(properties, pos, source, id) {\n    if (typeof pos === 'object') {\n        const { line, column } = pos;\n        properties.loc = { column, file: id, line };\n    }\n    else {\n        properties.pos = pos;\n        const location = locate(source, pos, { offsetLine: 1 });\n        if (!location) {\n            return;\n        }\n        const { line, column } = location;\n        properties.loc = { column, file: id, line };\n    }\n    if (properties.frame === undefined) {\n        const { line, column } = properties.loc;\n        properties.frame = getCodeFrame(source, line, column);\n    }\n}\nconst symbolAugmented = Symbol('augmented');\nfunction augmentLogMessage(log) {\n    // Make sure to only augment the log message once\n    if (!(log.plugin || log.loc) || log[symbolAugmented]) {\n        return;\n    }\n    log[symbolAugmented] = true;\n    let prefix = '';\n    if (log.plugin) {\n        prefix += `[plugin ${log.plugin}] `;\n    }\n    const id = log.id || log.loc?.file;\n    if (id) {\n        const position = log.loc ? ` (${log.loc.line}:${log.loc.column})` : '';\n        prefix += `${relativeId(id)}${position}: `;\n    }\n    log.message = prefix + log.message;\n}\n// Error codes should be sorted alphabetically while errors should be sorted by\n// error code below\nconst ADDON_ERROR = 'ADDON_ERROR', ALREADY_CLOSED = 'ALREADY_CLOSED', AMBIGUOUS_EXTERNAL_NAMESPACES = 'AMBIGUOUS_EXTERNAL_NAMESPACES', ANONYMOUS_PLUGIN_CACHE = 'ANONYMOUS_PLUGIN_CACHE', ASSET_NOT_FINALISED = 'ASSET_NOT_FINALISED', ASSET_NOT_FOUND = 'ASSET_NOT_FOUND', ASSET_SOURCE_ALREADY_SET = 'ASSET_SOURCE_ALREADY_SET', ASSET_SOURCE_MISSING = 'ASSET_SOURCE_MISSING', BAD_LOADER = 'BAD_LOADER', CANNOT_CALL_NAMESPACE = 'CANNOT_CALL_NAMESPACE', CANNOT_EMIT_FROM_OPTIONS_HOOK = 'CANNOT_EMIT_FROM_OPTIONS_HOOK', CHUNK_NOT_GENERATED = 'CHUNK_NOT_GENERATED', CHUNK_INVALID = 'CHUNK_INVALID', CIRCULAR_DEPENDENCY = 'CIRCULAR_DEPENDENCY', CIRCULAR_REEXPORT = 'CIRCULAR_REEXPORT', CONST_REASSIGN = 'CONST_REASSIGN', CYCLIC_CROSS_CHUNK_REEXPORT = 'CYCLIC_CROSS_CHUNK_REEXPORT', DEPRECATED_FEATURE = 'DEPRECATED_FEATURE', DUPLICATE_ARGUMENT_NAME = 'DUPLICATE_ARGUMENT_NAME', DUPLICATE_EXPORT = 'DUPLICATE_EXPORT', DUPLICATE_PLUGIN_NAME = 'DUPLICATE_PLUGIN_NAME', EMPTY_BUNDLE = 'EMPTY_BUNDLE', EVAL = 'EVAL', EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS = 'EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS', EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES = 'EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES', EXTERNAL_SYNTHETIC_EXPORTS = 'EXTERNAL_SYNTHETIC_EXPORTS', FILE_NAME_CONFLICT = 'FILE_NAME_CONFLICT', FILE_NOT_FOUND = 'FILE_NOT_FOUND', FIRST_SIDE_EFFECT = 'FIRST_SIDE_EFFECT', ILLEGAL_IDENTIFIER_AS_NAME = 'ILLEGAL_IDENTIFIER_AS_NAME', ILLEGAL_REASSIGNMENT = 'ILLEGAL_REASSIGNMENT', INCONSISTENT_IMPORT_ATTRIBUTES = 'INCONSISTENT_IMPORT_ATTRIBUTES', INVALID_ANNOTATION = 'INVALID_ANNOTATION', INPUT_HOOK_IN_OUTPUT_PLUGIN = 'INPUT_HOOK_IN_OUTPUT_PLUGIN', INVALID_CHUNK = 'INVALID_CHUNK', INVALID_EXPORT_OPTION = 'INVALID_EXPORT_OPTION', INVALID_EXTERNAL_ID = 'INVALID_EXTERNAL_ID', INVALID_IMPORT_ATTRIBUTE = 'INVALID_IMPORT_ATTRIBUTE', INVALID_LOG_POSITION = 'INVALID_LOG_POSITION', INVALID_OPTION = 'INVALID_OPTION', INVALID_PLUGIN_HOOK = 'INVALID_PLUGIN_HOOK', INVALID_ROLLUP_PHASE = 'INVALID_ROLLUP_PHASE', INVALID_SETASSETSOURCE = 'INVALID_SETASSETSOURCE', INVALID_TLA_FORMAT = 'INVALID_TLA_FORMAT', MISSING_EXPORT = 'MISSING_EXPORT', MISSING_GLOBAL_NAME = 'MISSING_GLOBAL_NAME', MISSING_IMPLICIT_DEPENDANT = 'MISSING_IMPLICIT_DEPENDANT', MISSING_NAME_OPTION_FOR_IIFE_EXPORT = 'MISSING_NAME_OPTION_FOR_IIFE_EXPORT', MISSING_NODE_BUILTINS = 'MISSING_NODE_BUILTINS', MISSING_OPTION = 'MISSING_OPTION', MIXED_EXPORTS = 'MIXED_EXPORTS', MODULE_LEVEL_DIRECTIVE = 'MODULE_LEVEL_DIRECTIVE', NAMESPACE_CONFLICT = 'NAMESPACE_CONFLICT', NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE = 'NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE', OPTIMIZE_CHUNK_STATUS = 'OPTIMIZE_CHUNK_STATUS', PARSE_ERROR = 'PARSE_ERROR', PLUGIN_ERROR = 'PLUGIN_ERROR', REDECLARATION_ERROR = 'REDECLARATION_ERROR', SHIMMED_EXPORT = 'SHIMMED_EXPORT', SOURCEMAP_BROKEN = 'SOURCEMAP_BROKEN', SOURCEMAP_ERROR = 'SOURCEMAP_ERROR', SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT = 'SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT', THIS_IS_UNDEFINED = 'THIS_IS_UNDEFINED', UNEXPECTED_NAMED_IMPORT = 'UNEXPECTED_NAMED_IMPORT', UNKNOWN_OPTION = 'UNKNOWN_OPTION', UNRESOLVED_ENTRY = 'UNRESOLVED_ENTRY', UNRESOLVED_IMPORT = 'UNRESOLVED_IMPORT', UNUSED_EXTERNAL_IMPORT = 'UNUSED_EXTERNAL_IMPORT', VALIDATION_ERROR = 'VALIDATION_ERROR';\nfunction logAddonNotGenerated(message, hook, plugin) {\n    return {\n        code: ADDON_ERROR,\n        message: `Could not retrieve \"${hook}\". Check configuration of plugin \"${plugin}\".\n\\tError Message: ${message}`\n    };\n}\nfunction logAlreadyClosed() {\n    return {\n        code: ALREADY_CLOSED,\n        message: 'Bundle is already closed, no more calls to \"generate\" or \"write\" are allowed.'\n    };\n}\nfunction logAmbiguousExternalNamespaces(binding, reexportingModule, usedModule, sources) {\n    return {\n        binding,\n        code: AMBIGUOUS_EXTERNAL_NAMESPACES,\n        ids: sources,\n        message: `Ambiguous external namespace resolution: \"${relativeId(reexportingModule)}\" re-exports \"${binding}\" from one of the external modules ${printQuotedStringList(sources.map(module => relativeId(module)))}, guessing \"${relativeId(usedModule)}\".`,\n        reexporter: reexportingModule\n    };\n}\nfunction logAnonymousPluginCache() {\n    return {\n        code: ANONYMOUS_PLUGIN_CACHE,\n        message: 'A plugin is trying to use the Rollup cache but is not declaring a plugin name or cacheKey.'\n    };\n}\nfunction logAssetNotFinalisedForFileName(name) {\n    return {\n        code: ASSET_NOT_FINALISED,\n        message: `Plugin error - Unable to get file name for asset \"${name}\". Ensure that the source is set and that generate is called first. If you reference assets via import.meta.ROLLUP_FILE_URL_<referenceId>, you need to either have set their source after \"renderStart\" or need to provide an explicit \"fileName\" when emitting them.`\n    };\n}\nfunction logAssetReferenceIdNotFoundForSetSource(assetReferenceId) {\n    return {\n        code: ASSET_NOT_FOUND,\n        message: `Plugin error - Unable to set the source for unknown asset \"${assetReferenceId}\".`\n    };\n}\nfunction logAssetSourceAlreadySet(name) {\n    return {\n        code: ASSET_SOURCE_ALREADY_SET,\n        message: `Unable to set the source for asset \"${name}\", source already set.`\n    };\n}\nfunction logNoAssetSourceSet(assetName) {\n    return {\n        code: ASSET_SOURCE_MISSING,\n        message: `Plugin error creating asset \"${assetName}\" - no asset source set.`\n    };\n}\nfunction logBadLoader(id) {\n    return {\n        code: BAD_LOADER,\n        message: `Error loading \"${relativeId(id)}\": plugin load hook should return a string, a { code, map } object, or nothing/null.`\n    };\n}\nfunction logCannotCallNamespace(name) {\n    return {\n        code: CANNOT_CALL_NAMESPACE,\n        message: `Cannot call a namespace (\"${name}\").`\n    };\n}\nfunction logCannotEmitFromOptionsHook() {\n    return {\n        code: CANNOT_EMIT_FROM_OPTIONS_HOOK,\n        message: `Cannot emit files or set asset sources in the \"outputOptions\" hook, use the \"renderStart\" hook instead.`\n    };\n}\nfunction logChunkNotGeneratedForFileName(name) {\n    return {\n        code: CHUNK_NOT_GENERATED,\n        message: `Plugin error - Unable to get file name for emitted chunk \"${name}\". You can only get file names once chunks have been generated after the \"renderStart\" hook.`\n    };\n}\nfunction logChunkInvalid({ fileName, code }, { pos, message }) {\n    const errorProperties = {\n        code: CHUNK_INVALID,\n        message: `Chunk \"${fileName}\" is not valid JavaScript: ${message}.`\n    };\n    augmentCodeLocation(errorProperties, pos, code, fileName);\n    return errorProperties;\n}\nfunction logCircularDependency(cyclePath) {\n    return {\n        code: CIRCULAR_DEPENDENCY,\n        ids: cyclePath,\n        message: `Circular dependency: ${cyclePath.map(relativeId).join(' -> ')}`\n    };\n}\nfunction logCircularReexport(exportName, exporter) {\n    return {\n        code: CIRCULAR_REEXPORT,\n        exporter,\n        message: `\"${exportName}\" cannot be exported from \"${relativeId(exporter)}\" as it is a reexport that references itself.`\n    };\n}\nfunction logCyclicCrossChunkReexport(exportName, exporter, reexporter, importer, preserveModules) {\n    return {\n        code: CYCLIC_CROSS_CHUNK_REEXPORT,\n        exporter,\n        id: importer,\n        message: `Export \"${exportName}\" of module \"${relativeId(exporter)}\" was reexported through module \"${relativeId(reexporter)}\" while both modules are dependencies of each other and will end up in different chunks by current Rollup settings. This scenario is not well supported at the moment as it will produce a circular dependency between chunks and will likely lead to broken execution order.\\nEither change the import in \"${relativeId(importer)}\" to point directly to the exporting module or ${preserveModules ? 'do not use \"output.preserveModules\"' : 'reconfigure \"output.manualChunks\"'} to ensure these modules end up in the same chunk.`,\n        reexporter\n    };\n}\nfunction logDeprecation(deprecation, urlSnippet, plugin) {\n    return {\n        code: DEPRECATED_FEATURE,\n        message: deprecation,\n        url: getRollupUrl(urlSnippet),\n        ...({})\n    };\n}\nfunction logConstVariableReassignError() {\n    return {\n        code: CONST_REASSIGN,\n        message: 'Cannot reassign a variable declared with `const`'\n    };\n}\nfunction logDuplicateArgumentNameError(name) {\n    return {\n        code: DUPLICATE_ARGUMENT_NAME,\n        message: `Duplicate argument name \"${name}\"`\n    };\n}\nfunction logDuplicateExportError(name) {\n    return { code: DUPLICATE_EXPORT, message: `Duplicate export \"${name}\"` };\n}\nfunction logDuplicatePluginName(plugin) {\n    return {\n        code: DUPLICATE_PLUGIN_NAME,\n        message: `The plugin name ${plugin} is being used twice in the same build. Plugin names must be distinct or provide a cacheKey (please post an issue to the plugin if you are a plugin user).`\n    };\n}\nfunction logEmptyChunk(chunkName) {\n    return {\n        code: EMPTY_BUNDLE,\n        message: `Generated an empty chunk: \"${chunkName}\".`,\n        names: [chunkName]\n    };\n}\nfunction logEval(id) {\n    return {\n        code: EVAL,\n        id,\n        message: `Use of eval in \"${relativeId(id)}\" is strongly discouraged as it poses security risks and may cause issues with minification.`,\n        url: getRollupUrl(URL_AVOIDING_EVAL)\n    };\n}\nfunction logExternalSyntheticExports(id, importer) {\n    return {\n        code: EXTERNAL_SYNTHETIC_EXPORTS,\n        exporter: id,\n        message: `External \"${id}\" cannot have \"syntheticNamedExports\" enabled (imported by \"${relativeId(importer)}\").`\n    };\n}\nfunction logFileNameConflict(fileName) {\n    return {\n        code: FILE_NAME_CONFLICT,\n        message: `The emitted file \"${fileName}\" overwrites a previously emitted file of the same name.`\n    };\n}\nfunction logFileReferenceIdNotFoundForFilename(assetReferenceId) {\n    return {\n        code: FILE_NOT_FOUND,\n        message: `Plugin error - Unable to get file name for unknown file \"${assetReferenceId}\".`\n    };\n}\nfunction logFirstSideEffect(source, id, { line, column }) {\n    return {\n        code: FIRST_SIDE_EFFECT,\n        message: `First side effect in ${relativeId(id)} is at (${line}:${column})\\n${getCodeFrame(source, line, column)}`\n    };\n}\nfunction logIllegalIdentifierAsName(name) {\n    return {\n        code: ILLEGAL_IDENTIFIER_AS_NAME,\n        message: `Given name \"${name}\" is not a legal JS identifier. If you need this, you can try \"output.extend: true\".`,\n        url: getRollupUrl(URL_OUTPUT_EXTEND)\n    };\n}\nfunction logIllegalImportReassignment(name, importingId) {\n    return {\n        code: ILLEGAL_REASSIGNMENT,\n        message: `Illegal reassignment of import \"${name}\" in \"${relativeId(importingId)}\".`\n    };\n}\nfunction logInconsistentImportAttributes(existingAttributes, newAttributes, source, importer) {\n    return {\n        code: INCONSISTENT_IMPORT_ATTRIBUTES,\n        message: `Module \"${relativeId(importer)}\" tried to import \"${relativeId(source)}\" with ${formatAttributes(newAttributes)} attributes, but it was already imported elsewhere with ${formatAttributes(existingAttributes)} attributes. Please ensure that import attributes for the same module are always consistent.`\n    };\n}\nconst formatAttributes = (attributes) => {\n    const entries = Object.entries(attributes);\n    if (entries.length === 0)\n        return 'no';\n    return entries.map(([key, value]) => `\"${key}\": \"${value}\"`).join(', ');\n};\nfunction logInvalidAnnotation(comment, id, type) {\n    return {\n        code: INVALID_ANNOTATION,\n        id,\n        message: `A comment\\n\\n\"${comment}\"\\n\\nin \"${relativeId(id)}\" contains an annotation that Rollup cannot interpret due to the position of the comment. The comment will be removed to avoid issues.`,\n        url: getRollupUrl(type === 'noSideEffects' ? URL_TREESHAKE_NOSIDEEFFECTS : URL_TREESHAKE_PURE)\n    };\n}\nfunction logInputHookInOutputPlugin(pluginName, hookName) {\n    return {\n        code: INPUT_HOOK_IN_OUTPUT_PLUGIN,\n        message: `The \"${hookName}\" hook used by the output plugin ${pluginName} is a build time hook and will not be run for that plugin. Either this plugin cannot be used as an output plugin, or it should have an option to configure it as an output plugin.`\n    };\n}\nfunction logCannotAssignModuleToChunk(moduleId, assignToAlias, currentAlias) {\n    return {\n        code: INVALID_CHUNK,\n        message: `Cannot assign \"${relativeId(moduleId)}\" to the \"${assignToAlias}\" chunk as it is already in the \"${currentAlias}\" chunk.`\n    };\n}\nfunction logInvalidExportOptionValue(optionValue) {\n    return {\n        code: INVALID_EXPORT_OPTION,\n        message: `\"output.exports\" must be \"default\", \"named\", \"none\", \"auto\", or left unspecified (defaults to \"auto\"), received \"${optionValue}\".`,\n        url: getRollupUrl(URL_OUTPUT_EXPORTS)\n    };\n}\nfunction logIncompatibleExportOptionValue(optionValue, keys, entryModule) {\n    return {\n        code: INVALID_EXPORT_OPTION,\n        message: `\"${optionValue}\" was specified for \"output.exports\", but entry module \"${relativeId(entryModule)}\" has the following exports: ${printQuotedStringList(keys)}`,\n        url: getRollupUrl(URL_OUTPUT_EXPORTS)\n    };\n}\nfunction logInternalIdCannotBeExternal(source, importer) {\n    return {\n        code: INVALID_EXTERNAL_ID,\n        message: `\"${source}\" is imported as an external by \"${relativeId(importer)}\", but is already an existing non-external module id.`\n    };\n}\nfunction logImportOptionsAreInvalid(importer) {\n    return {\n        code: INVALID_IMPORT_ATTRIBUTE,\n        message: `Rollup could not statically analyze the options argument of a dynamic import in \"${relativeId(importer)}\". Dynamic import options need to be an object with a nested attributes object.`\n    };\n}\nfunction logImportAttributeIsInvalid(importer) {\n    return {\n        code: INVALID_IMPORT_ATTRIBUTE,\n        message: `Rollup could not statically analyze an import attribute of a dynamic import in \"${relativeId(importer)}\". Import attributes need to have string keys and values. The attribute will be removed.`\n    };\n}\nfunction logInvalidLogPosition(plugin) {\n    return {\n        code: INVALID_LOG_POSITION,\n        message: `Plugin \"${plugin}\" tried to add a file position to a log or warning. This is only supported in the \"transform\" hook at the moment and will be ignored.`\n    };\n}\nfunction logInvalidOption(option, urlSnippet, explanation, value) {\n    return {\n        code: INVALID_OPTION,\n        message: `Invalid value ${value === undefined ? '' : `${JSON.stringify(value)} `}for option \"${option}\" - ${explanation}.`,\n        url: getRollupUrl(urlSnippet)\n    };\n}\nfunction logInvalidAddonPluginHook(hook, plugin) {\n    return {\n        code: INVALID_PLUGIN_HOOK,\n        hook,\n        message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a string, a function hook or an object with a \"handler\" string or function.`,\n        plugin\n    };\n}\nfunction logInvalidFunctionPluginHook(hook, plugin) {\n    return {\n        code: INVALID_PLUGIN_HOOK,\n        hook,\n        message: `Error running plugin hook \"${hook}\" for plugin \"${plugin}\", expected a function hook or an object with a \"handler\" function.`,\n        plugin\n    };\n}\nfunction logInvalidRollupPhaseForChunkEmission() {\n    return {\n        code: INVALID_ROLLUP_PHASE,\n        message: `Cannot emit chunks after module loading has finished.`\n    };\n}\nfunction logInvalidSetAssetSourceCall() {\n    return {\n        code: INVALID_SETASSETSOURCE,\n        message: `setAssetSource cannot be called in transform for caching reasons. Use emitFile with a source, or call setAssetSource in another hook.`\n    };\n}\nfunction logInvalidFormatForTopLevelAwait(id, format) {\n    return {\n        code: INVALID_TLA_FORMAT,\n        id,\n        message: `Module format \"${format}\" does not support top-level await. Use the \"es\" or \"system\" output formats rather.`\n    };\n}\nfunction logMissingEntryExport(binding, exporter) {\n    return {\n        binding,\n        code: MISSING_EXPORT,\n        exporter,\n        message: `Exported variable \"${binding}\" is not defined in \"${relativeId(exporter)}\".`,\n        url: getRollupUrl(URL_NAME_IS_NOT_EXPORTED)\n    };\n}\nfunction logMissingExport(binding, importingModule, exporter) {\n    const isJson = extname(exporter) === '.json';\n    return {\n        binding,\n        code: MISSING_EXPORT,\n        exporter,\n        id: importingModule,\n        message: `\"${binding}\" is not exported by \"${relativeId(exporter)}\", imported by \"${relativeId(importingModule)}\".${isJson ? ' (Note that you need @rollup/plugin-json to import JSON files)' : ''}`,\n        url: getRollupUrl(URL_NAME_IS_NOT_EXPORTED)\n    };\n}\nfunction logMissingGlobalName(externalId, guess) {\n    return {\n        code: MISSING_GLOBAL_NAME,\n        id: externalId,\n        message: `No name was provided for external module \"${externalId}\" in \"output.globals\" – guessing \"${guess}\".`,\n        names: [guess],\n        url: getRollupUrl(URL_OUTPUT_GLOBALS)\n    };\n}\nfunction logImplicitDependantCannotBeExternal(unresolvedId, implicitlyLoadedBefore) {\n    return {\n        code: MISSING_IMPLICIT_DEPENDANT,\n        message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" cannot be external.`\n    };\n}\nfunction logUnresolvedImplicitDependant(unresolvedId, implicitlyLoadedBefore) {\n    return {\n        code: MISSING_IMPLICIT_DEPENDANT,\n        message: `Module \"${relativeId(unresolvedId)}\" that should be implicitly loaded before \"${relativeId(implicitlyLoadedBefore)}\" could not be resolved.`\n    };\n}\nfunction logImplicitDependantIsNotIncluded(module) {\n    const implicitDependencies = [...module.implicitlyLoadedBefore]\n        .map(dependency => relativeId(dependency.id))\n        .sort();\n    return {\n        code: MISSING_IMPLICIT_DEPENDANT,\n        message: `Module \"${relativeId(module.id)}\" that should be implicitly loaded before ${printQuotedStringList(implicitDependencies)} is not included in the module graph. Either it was not imported by an included module or only via a tree-shaken dynamic import, or no imported bindings were used and it had otherwise no side-effects.`\n    };\n}\nfunction logMissingNameOptionForIifeExport() {\n    return {\n        code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n        message: `If you do not supply \"output.name\", you may not be able to access the exports of an IIFE bundle.`,\n        url: getRollupUrl(URL_OUTPUT_NAME)\n    };\n}\nfunction logMissingNameOptionForUmdExport() {\n    return {\n        code: MISSING_NAME_OPTION_FOR_IIFE_EXPORT,\n        message: 'You must supply \"output.name\" for UMD bundles that have exports so that the exports are accessible in environments without a module loader.',\n        url: getRollupUrl(URL_OUTPUT_NAME)\n    };\n}\nfunction logMissingNodeBuiltins(externalBuiltins) {\n    return {\n        code: MISSING_NODE_BUILTINS,\n        ids: externalBuiltins,\n        message: `Creating a browser bundle that depends on Node.js built-in modules (${printQuotedStringList(externalBuiltins)}). You might need to include https://github.com/FredKSchott/rollup-plugin-polyfill-node`\n    };\n}\n// eslint-disable-next-line unicorn/prevent-abbreviations\nfunction logMissingFileOrDirOption() {\n    return {\n        code: MISSING_OPTION,\n        message: 'You must specify \"output.file\" or \"output.dir\" for the build.',\n        url: getRollupUrl(URL_OUTPUT_DIR)\n    };\n}\nfunction logMixedExport(facadeModuleId, name) {\n    return {\n        code: MIXED_EXPORTS,\n        id: facadeModuleId,\n        message: `Entry module \"${relativeId(facadeModuleId)}\" is using named and default exports together. Consumers of your bundle will have to use \\`${name || 'chunk'}.default\\` to access the default export, which may not be what you want. Use \\`output.exports: \"named\"\\` to disable this warning.`,\n        url: getRollupUrl(URL_OUTPUT_EXPORTS)\n    };\n}\nfunction logModuleLevelDirective(directive, id) {\n    return {\n        code: MODULE_LEVEL_DIRECTIVE,\n        id,\n        message: `Module level directives cause errors when bundled, \"${directive}\" in \"${relativeId(id)}\" was ignored.`\n    };\n}\nfunction logNamespaceConflict(binding, reexportingModuleId, sources) {\n    return {\n        binding,\n        code: NAMESPACE_CONFLICT,\n        ids: sources,\n        message: `Conflicting namespaces: \"${relativeId(reexportingModuleId)}\" re-exports \"${binding}\" from one of the modules ${printQuotedStringList(sources.map(moduleId => relativeId(moduleId)))} (will be ignored).`,\n        reexporter: reexportingModuleId\n    };\n}\nfunction logNoTransformMapOrAstWithoutCode(pluginName) {\n    return {\n        code: NO_TRANSFORM_MAP_OR_AST_WITHOUT_CODE,\n        message: `The plugin \"${pluginName}\" returned a \"map\" or \"ast\" without returning ` +\n            'a \"code\". This will be ignored.'\n    };\n}\nfunction logOptimizeChunkStatus(chunks, smallChunks, pointInTime) {\n    return {\n        code: OPTIMIZE_CHUNK_STATUS,\n        message: `${pointInTime}, there are\\n` +\n            `${chunks} chunks, of which\\n` +\n            `${smallChunks} are below minChunkSize.`\n    };\n}\nfunction logParseError(message, pos) {\n    return { code: PARSE_ERROR, message, pos };\n}\nfunction logRedeclarationError(name) {\n    return {\n        code: REDECLARATION_ERROR,\n        message: `Identifier \"${name}\" has already been declared`\n    };\n}\nfunction logModuleParseError(error, moduleId) {\n    let message = error.message.replace(/ \\(\\d+:\\d+\\)$/, '');\n    if (moduleId.endsWith('.json')) {\n        message += ' (Note that you need @rollup/plugin-json to import JSON files)';\n    }\n    else if (!moduleId.endsWith('.js')) {\n        message += ' (Note that you need plugins to import files that are not JavaScript)';\n    }\n    return {\n        cause: error,\n        code: PARSE_ERROR,\n        id: moduleId,\n        message,\n        stack: error.stack\n    };\n}\nfunction logPluginError(error, plugin, { hook, id } = {}) {\n    const code = error.code;\n    if (!error.pluginCode &&\n        code != null &&\n        (typeof code !== 'string' || !code.startsWith('PLUGIN_'))) {\n        error.pluginCode = code;\n    }\n    error.code = PLUGIN_ERROR;\n    error.plugin = plugin;\n    if (hook) {\n        error.hook = hook;\n    }\n    if (id) {\n        error.id = id;\n    }\n    return error;\n}\nfunction logShimmedExport(id, binding) {\n    return {\n        binding,\n        code: SHIMMED_EXPORT,\n        exporter: id,\n        message: `Missing export \"${binding}\" has been shimmed in module \"${relativeId(id)}\".`\n    };\n}\nfunction logSourcemapBroken(plugin) {\n    return {\n        code: SOURCEMAP_BROKEN,\n        message: `Sourcemap is likely to be incorrect: a plugin (${plugin}) was used to transform files, but didn't generate a sourcemap for the transformation. Consult the plugin documentation for help`,\n        plugin,\n        url: getRollupUrl(URL_SOURCEMAP_IS_LIKELY_TO_BE_INCORRECT)\n    };\n}\nfunction logConflictingSourcemapSources(filename) {\n    return {\n        code: SOURCEMAP_BROKEN,\n        message: `Multiple conflicting contents for sourcemap source ${filename}`\n    };\n}\nfunction logInvalidSourcemapForError(error, id, column, line, pos) {\n    return {\n        cause: error,\n        code: SOURCEMAP_ERROR,\n        id,\n        loc: {\n            column,\n            file: id,\n            line\n        },\n        message: `Error when using sourcemap for reporting an error: ${error.message}`,\n        pos\n    };\n}\nfunction logSyntheticNamedExportsNeedNamespaceExport(id, syntheticNamedExportsOption) {\n    return {\n        code: SYNTHETIC_NAMED_EXPORTS_NEED_NAMESPACE_EXPORT,\n        exporter: id,\n        message: `Module \"${relativeId(id)}\" that is marked with \\`syntheticNamedExports: ${JSON.stringify(syntheticNamedExportsOption)}\\` needs ${typeof syntheticNamedExportsOption === 'string' && syntheticNamedExportsOption !== 'default'\n            ? `an explicit export named \"${syntheticNamedExportsOption}\"`\n            : 'a default export'} that does not reexport an unresolved named export of the same module.`\n    };\n}\nfunction logThisIsUndefined() {\n    return {\n        code: THIS_IS_UNDEFINED,\n        message: `The 'this' keyword is equivalent to 'undefined' at the top level of an ES module, and has been rewritten`,\n        url: getRollupUrl(URL_THIS_IS_UNDEFINED)\n    };\n}\nfunction logUnexpectedNamedImport(id, imported, isReexport) {\n    const importType = isReexport ? 'reexport' : 'import';\n    return {\n        code: UNEXPECTED_NAMED_IMPORT,\n        exporter: id,\n        message: `The named export \"${imported}\" was ${importType}ed from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". Either remove or change this ${importType} or change the value of the \"output.interop\" option.`,\n        url: getRollupUrl(URL_OUTPUT_INTEROP)\n    };\n}\nfunction logUnexpectedNamespaceReexport(id) {\n    return {\n        code: UNEXPECTED_NAMED_IMPORT,\n        exporter: id,\n        message: `There was a namespace \"*\" reexport from the external module \"${relativeId(id)}\" even though its interop type is \"defaultOnly\". This will be ignored as namespace reexports only reexport named exports. If this is not intended, either remove or change this reexport or change the value of the \"output.interop\" option.`,\n        url: getRollupUrl(URL_OUTPUT_INTEROP)\n    };\n}\nfunction logUnknownOption(optionType, unknownOptions, validOptions) {\n    return {\n        code: UNKNOWN_OPTION,\n        message: `Unknown ${optionType}: ${unknownOptions.join(', ')}. Allowed options: ${validOptions.join(', ')}`\n    };\n}\nfunction logEntryCannotBeExternal(unresolvedId) {\n    return {\n        code: UNRESOLVED_ENTRY,\n        message: `Entry module \"${relativeId(unresolvedId)}\" cannot be external.`\n    };\n}\nfunction logExternalModulesCannotBeIncludedInManualChunks(source) {\n    return {\n        code: EXTERNAL_MODULES_CANNOT_BE_INCLUDED_IN_MANUAL_CHUNKS,\n        message: `\"${source}\" cannot be included in manualChunks because it is resolved as an external module by the \"external\" option or plugins.`\n    };\n}\nfunction logExternalModulesCannotBeTransformedToModules(source) {\n    return {\n        code: EXTERNAL_MODULES_CANNOT_BE_TRANSFORMED_TO_MODULES,\n        message: `${source} is resolved as a module now, but it was an external module before. Please check whether there are conflicts in your Rollup options \"external\" and \"manualChunks\", manualChunks cannot include external modules.`\n    };\n}\nfunction logUnresolvedEntry(unresolvedId) {\n    return {\n        code: UNRESOLVED_ENTRY,\n        message: `Could not resolve entry module \"${relativeId(unresolvedId)}\".`\n    };\n}\nfunction logUnresolvedImport(source, importer) {\n    return {\n        code: UNRESOLVED_IMPORT,\n        exporter: source,\n        id: importer,\n        message: `Could not resolve \"${source}\" from \"${relativeId(importer)}\"`\n    };\n}\nfunction logUnresolvedImportTreatedAsExternal(source, importer) {\n    return {\n        code: UNRESOLVED_IMPORT,\n        exporter: source,\n        id: importer,\n        message: `\"${source}\" is imported by \"${relativeId(importer)}\", but could not be resolved – treating it as an external dependency.`,\n        url: getRollupUrl(URL_TREATING_MODULE_AS_EXTERNAL_DEPENDENCY)\n    };\n}\nfunction logUnusedExternalImports(externalId, names, importers) {\n    return {\n        code: UNUSED_EXTERNAL_IMPORT,\n        exporter: externalId,\n        ids: importers,\n        message: `${printQuotedStringList(names, [\n            'is',\n            'are'\n        ])} imported from external module \"${externalId}\" but never used in ${printQuotedStringList(importers.map(importer => relativeId(importer)))}.`,\n        names\n    };\n}\nfunction logFailedValidation(message) {\n    return {\n        code: VALIDATION_ERROR,\n        message\n    };\n}\nfunction warnDeprecation(deprecation, urlSnippet, activeDeprecation, options, plugin) {\n    warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, options.onLog, options.strictDeprecations);\n}\nfunction warnDeprecationWithOptions(deprecation, urlSnippet, activeDeprecation, log, strictDeprecations, plugin) {\n    {\n        const warning = logDeprecation(deprecation, urlSnippet);\n        if (strictDeprecations) {\n            return error(warning);\n        }\n        log(LOGLEVEL_WARN, warning);\n    }\n}\n\n// This file is generated by scripts/generate-buffer-to-ast.js.\n// Do not edit this file directly.\nfunction convertProgram(buffer, readString) {\n    const node = convertNode(0, new Uint32Array(buffer), readString);\n    switch (node.type) {\n        case PanicError: {\n            return error(getRollupError(logParseError(node.message)));\n        }\n        case ParseError: {\n            return error(getRollupError(logParseError(node.message, node.start)));\n        }\n        default: {\n            return node;\n        }\n    }\n}\n/* eslint-disable sort-keys */\nconst nodeConverters = [\n    function panicError(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const message = convertString(buffer[position], buffer, readString);\n        return {\n            type: 'PanicError',\n            start,\n            end,\n            message\n        };\n    },\n    function parseError(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const message = convertString(buffer[position], buffer, readString);\n        return {\n            type: 'ParseError',\n            start,\n            end,\n            message\n        };\n    },\n    function arrayExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const elements = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'ArrayExpression',\n            start,\n            end,\n            elements\n        };\n    },\n    function arrayPattern(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const elements = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'ArrayPattern',\n            start,\n            end,\n            elements\n        };\n    },\n    function arrowFunctionExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const async = (flags & 1) === 1;\n        const expression = (flags & 2) === 2;\n        const generator = (flags & 4) === 4;\n        const annotations = convertAnnotations(buffer[position++], buffer);\n        const parameters = convertNodeList(buffer[position++], buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ArrowFunctionExpression',\n            start,\n            end,\n            async,\n            expression,\n            generator,\n            ...(annotations.length > 0 ? { [ANNOTATION_KEY]: annotations } : {}),\n            params: parameters,\n            body,\n            id: null\n        };\n    },\n    function assignmentExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const operator = FIXED_STRINGS[buffer[position++]];\n        const left = convertNode(buffer[position++], buffer, readString);\n        const right = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'AssignmentExpression',\n            start,\n            end,\n            operator,\n            left,\n            right\n        };\n    },\n    function assignmentPattern(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const left = convertNode(buffer[position++], buffer, readString);\n        const right = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'AssignmentPattern',\n            start,\n            end,\n            left,\n            right\n        };\n    },\n    function awaitExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const argument = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'AwaitExpression',\n            start,\n            end,\n            argument\n        };\n    },\n    function binaryExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const operator = FIXED_STRINGS[buffer[position++]];\n        const left = convertNode(buffer[position++], buffer, readString);\n        const right = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'BinaryExpression',\n            start,\n            end,\n            operator,\n            left,\n            right\n        };\n    },\n    function blockStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const body = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'BlockStatement',\n            start,\n            end,\n            body\n        };\n    },\n    function breakStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const labelPosition = buffer[position];\n        const label = labelPosition === 0 ? null : convertNode(labelPosition, buffer, readString);\n        return {\n            type: 'BreakStatement',\n            start,\n            end,\n            label\n        };\n    },\n    function callExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const optional = (flags & 1) === 1;\n        const annotations = convertAnnotations(buffer[position++], buffer);\n        const callee = convertNode(buffer[position++], buffer, readString);\n        const callArguments = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'CallExpression',\n            start,\n            end,\n            optional,\n            ...(annotations.length > 0 ? { [ANNOTATION_KEY]: annotations } : {}),\n            callee,\n            arguments: callArguments\n        };\n    },\n    function catchClause(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const parameterPosition = buffer[position++];\n        const parameter = parameterPosition === 0 ? null : convertNode(parameterPosition, buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'CatchClause',\n            start,\n            end,\n            param: parameter,\n            body\n        };\n    },\n    function chainExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const expression = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ChainExpression',\n            start,\n            end,\n            expression\n        };\n    },\n    function classBody(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const body = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'ClassBody',\n            start,\n            end,\n            body\n        };\n    },\n    function classDeclaration(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const idPosition = buffer[position++];\n        const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n        const superClassPosition = buffer[position++];\n        const superClass = superClassPosition === 0 ? null : convertNode(superClassPosition, buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ClassDeclaration',\n            start,\n            end,\n            id,\n            superClass,\n            body\n        };\n    },\n    function classExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const idPosition = buffer[position++];\n        const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n        const superClassPosition = buffer[position++];\n        const superClass = superClassPosition === 0 ? null : convertNode(superClassPosition, buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ClassExpression',\n            start,\n            end,\n            id,\n            superClass,\n            body\n        };\n    },\n    function conditionalExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const test = convertNode(buffer[position++], buffer, readString);\n        const consequent = convertNode(buffer[position++], buffer, readString);\n        const alternate = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ConditionalExpression',\n            start,\n            end,\n            test,\n            consequent,\n            alternate\n        };\n    },\n    function continueStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const labelPosition = buffer[position];\n        const label = labelPosition === 0 ? null : convertNode(labelPosition, buffer, readString);\n        return {\n            type: 'ContinueStatement',\n            start,\n            end,\n            label\n        };\n    },\n    function debuggerStatement(position, buffer) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        return {\n            type: 'DebuggerStatement',\n            start,\n            end\n        };\n    },\n    function directive(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const directive = convertString(buffer[position++], buffer, readString);\n        const expression = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ExpressionStatement',\n            start,\n            end,\n            directive,\n            expression\n        };\n    },\n    function doWhileStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const body = convertNode(buffer[position++], buffer, readString);\n        const test = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'DoWhileStatement',\n            start,\n            end,\n            body,\n            test\n        };\n    },\n    function emptyStatement(position, buffer) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        return {\n            type: 'EmptyStatement',\n            start,\n            end\n        };\n    },\n    function exportAllDeclaration(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const exportedPosition = buffer[position++];\n        const exported = exportedPosition === 0 ? null : convertNode(exportedPosition, buffer, readString);\n        const source = convertNode(buffer[position++], buffer, readString);\n        const attributes = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'ExportAllDeclaration',\n            start,\n            end,\n            exported,\n            source,\n            attributes\n        };\n    },\n    function exportDefaultDeclaration(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const declaration = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ExportDefaultDeclaration',\n            start,\n            end,\n            declaration\n        };\n    },\n    function exportNamedDeclaration(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const specifiers = convertNodeList(buffer[position++], buffer, readString);\n        const sourcePosition = buffer[position++];\n        const source = sourcePosition === 0 ? null : convertNode(sourcePosition, buffer, readString);\n        const attributes = convertNodeList(buffer[position++], buffer, readString);\n        const declarationPosition = buffer[position];\n        const declaration = declarationPosition === 0 ? null : convertNode(declarationPosition, buffer, readString);\n        return {\n            type: 'ExportNamedDeclaration',\n            start,\n            end,\n            specifiers,\n            source,\n            attributes,\n            declaration\n        };\n    },\n    function exportSpecifier(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const local = convertNode(buffer[position++], buffer, readString);\n        const exportedPosition = buffer[position];\n        return {\n            type: 'ExportSpecifier',\n            start,\n            end,\n            local,\n            exported: exportedPosition === 0 ? { ...local } : convertNode(exportedPosition, buffer, readString)\n        };\n    },\n    function expressionStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const expression = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ExpressionStatement',\n            start,\n            end,\n            expression\n        };\n    },\n    function forInStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const left = convertNode(buffer[position++], buffer, readString);\n        const right = convertNode(buffer[position++], buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ForInStatement',\n            start,\n            end,\n            left,\n            right,\n            body\n        };\n    },\n    function forOfStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const awaited = (flags & 1) === 1;\n        const left = convertNode(buffer[position++], buffer, readString);\n        const right = convertNode(buffer[position++], buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ForOfStatement',\n            start,\n            end,\n            await: awaited,\n            left,\n            right,\n            body\n        };\n    },\n    function forStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const initPosition = buffer[position++];\n        const init = initPosition === 0 ? null : convertNode(initPosition, buffer, readString);\n        const testPosition = buffer[position++];\n        const test = testPosition === 0 ? null : convertNode(testPosition, buffer, readString);\n        const updatePosition = buffer[position++];\n        const update = updatePosition === 0 ? null : convertNode(updatePosition, buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ForStatement',\n            start,\n            end,\n            init,\n            test,\n            update,\n            body\n        };\n    },\n    function functionDeclaration(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const async = (flags & 1) === 1;\n        const generator = (flags & 2) === 2;\n        const annotations = convertAnnotations(buffer[position++], buffer);\n        const idPosition = buffer[position++];\n        const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n        const parameters = convertNodeList(buffer[position++], buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'FunctionDeclaration',\n            start,\n            end,\n            async,\n            generator,\n            ...(annotations.length > 0 ? { [ANNOTATION_KEY]: annotations } : {}),\n            id,\n            params: parameters,\n            body,\n            expression: false\n        };\n    },\n    function functionExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const async = (flags & 1) === 1;\n        const generator = (flags & 2) === 2;\n        const annotations = convertAnnotations(buffer[position++], buffer);\n        const idPosition = buffer[position++];\n        const id = idPosition === 0 ? null : convertNode(idPosition, buffer, readString);\n        const parameters = convertNodeList(buffer[position++], buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'FunctionExpression',\n            start,\n            end,\n            async,\n            generator,\n            ...(annotations.length > 0 ? { [ANNOTATION_KEY]: annotations } : {}),\n            id,\n            params: parameters,\n            body,\n            expression: false\n        };\n    },\n    function identifier(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const name = convertString(buffer[position], buffer, readString);\n        return {\n            type: 'Identifier',\n            start,\n            end,\n            name\n        };\n    },\n    function ifStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const test = convertNode(buffer[position++], buffer, readString);\n        const consequent = convertNode(buffer[position++], buffer, readString);\n        const alternatePosition = buffer[position];\n        const alternate = alternatePosition === 0 ? null : convertNode(alternatePosition, buffer, readString);\n        return {\n            type: 'IfStatement',\n            start,\n            end,\n            test,\n            consequent,\n            alternate\n        };\n    },\n    function importAttribute(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const key = convertNode(buffer[position++], buffer, readString);\n        const value = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ImportAttribute',\n            start,\n            end,\n            key,\n            value\n        };\n    },\n    function importDeclaration(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const specifiers = convertNodeList(buffer[position++], buffer, readString);\n        const source = convertNode(buffer[position++], buffer, readString);\n        const attributes = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'ImportDeclaration',\n            start,\n            end,\n            specifiers,\n            source,\n            attributes\n        };\n    },\n    function importDefaultSpecifier(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const local = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ImportDefaultSpecifier',\n            start,\n            end,\n            local\n        };\n    },\n    function importExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const source = convertNode(buffer[position++], buffer, readString);\n        const optionsPosition = buffer[position];\n        const options = optionsPosition === 0 ? null : convertNode(optionsPosition, buffer, readString);\n        return {\n            type: 'ImportExpression',\n            start,\n            end,\n            source,\n            options\n        };\n    },\n    function importNamespaceSpecifier(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const local = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ImportNamespaceSpecifier',\n            start,\n            end,\n            local\n        };\n    },\n    function importSpecifier(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const importedPosition = buffer[position++];\n        const local = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ImportSpecifier',\n            start,\n            end,\n            imported: importedPosition === 0 ? { ...local } : convertNode(importedPosition, buffer, readString),\n            local\n        };\n    },\n    function labeledStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const label = convertNode(buffer[position++], buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'LabeledStatement',\n            start,\n            end,\n            label,\n            body\n        };\n    },\n    function literalBigInt(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const bigint = convertString(buffer[position++], buffer, readString);\n        const raw = convertString(buffer[position], buffer, readString);\n        return {\n            type: 'Literal',\n            start,\n            end,\n            bigint,\n            raw,\n            value: BigInt(bigint)\n        };\n    },\n    function literalBoolean(position, buffer) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const value = (flags & 1) === 1;\n        return {\n            type: 'Literal',\n            start,\n            end,\n            value,\n            raw: value ? 'true' : 'false'\n        };\n    },\n    function literalNull(position, buffer) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        return {\n            type: 'Literal',\n            start,\n            end,\n            raw: 'null',\n            value: null\n        };\n    },\n    function literalNumber(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const rawPosition = buffer[position++];\n        const raw = rawPosition === 0 ? undefined : convertString(rawPosition, buffer, readString);\n        const value = new DataView(buffer.buffer).getFloat64(position << 2, true);\n        return {\n            type: 'Literal',\n            start,\n            end,\n            raw,\n            value\n        };\n    },\n    function literalRegExp(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = convertString(buffer[position++], buffer, readString);\n        const pattern = convertString(buffer[position], buffer, readString);\n        return {\n            type: 'Literal',\n            start,\n            end,\n            raw: `/${pattern}/${flags}`,\n            regex: { flags, pattern },\n            value: new RegExp(pattern, flags)\n        };\n    },\n    function literalString(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const value = convertString(buffer[position++], buffer, readString);\n        const rawPosition = buffer[position];\n        const raw = rawPosition === 0 ? undefined : convertString(rawPosition, buffer, readString);\n        return {\n            type: 'Literal',\n            start,\n            end,\n            value,\n            raw\n        };\n    },\n    function logicalExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const operator = FIXED_STRINGS[buffer[position++]];\n        const left = convertNode(buffer[position++], buffer, readString);\n        const right = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'LogicalExpression',\n            start,\n            end,\n            operator,\n            left,\n            right\n        };\n    },\n    function memberExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const computed = (flags & 1) === 1;\n        const optional = (flags & 2) === 2;\n        const object = convertNode(buffer[position++], buffer, readString);\n        const property = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'MemberExpression',\n            start,\n            end,\n            computed,\n            optional,\n            object,\n            property\n        };\n    },\n    function metaProperty(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const meta = convertNode(buffer[position++], buffer, readString);\n        const property = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'MetaProperty',\n            start,\n            end,\n            meta,\n            property\n        };\n    },\n    function methodDefinition(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const isStatic = (flags & 1) === 1;\n        const computed = (flags & 2) === 2;\n        const key = convertNode(buffer[position++], buffer, readString);\n        const value = convertNode(buffer[position++], buffer, readString);\n        const kind = FIXED_STRINGS[buffer[position]];\n        return {\n            type: 'MethodDefinition',\n            start,\n            end,\n            static: isStatic,\n            computed,\n            key,\n            value,\n            kind\n        };\n    },\n    function newExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const annotations = convertAnnotations(buffer[position++], buffer);\n        const callee = convertNode(buffer[position++], buffer, readString);\n        const callArguments = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'NewExpression',\n            start,\n            end,\n            ...(annotations.length > 0 ? { [ANNOTATION_KEY]: annotations } : {}),\n            callee,\n            arguments: callArguments\n        };\n    },\n    function objectExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const properties = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'ObjectExpression',\n            start,\n            end,\n            properties\n        };\n    },\n    function objectPattern(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const properties = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'ObjectPattern',\n            start,\n            end,\n            properties\n        };\n    },\n    function privateIdentifier(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const name = convertString(buffer[position], buffer, readString);\n        return {\n            type: 'PrivateIdentifier',\n            start,\n            end,\n            name\n        };\n    },\n    function program(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const body = convertNodeList(buffer[position++], buffer, readString);\n        const invalidAnnotations = convertAnnotations(buffer[position], buffer);\n        return {\n            type: 'Program',\n            start,\n            end,\n            body,\n            ...(invalidAnnotations.length > 0 ? { [INVALID_ANNOTATION_KEY]: invalidAnnotations } : {}),\n            sourceType: 'module'\n        };\n    },\n    function property(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const method = (flags & 1) === 1;\n        const shorthand = (flags & 2) === 2;\n        const computed = (flags & 4) === 4;\n        const keyPosition = buffer[position++];\n        const value = convertNode(buffer[position++], buffer, readString);\n        const kind = FIXED_STRINGS[buffer[position]];\n        return {\n            type: 'Property',\n            start,\n            end,\n            method,\n            shorthand,\n            computed,\n            key: keyPosition === 0 ? { ...value } : convertNode(keyPosition, buffer, readString),\n            value,\n            kind\n        };\n    },\n    function propertyDefinition(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const isStatic = (flags & 1) === 1;\n        const computed = (flags & 2) === 2;\n        const key = convertNode(buffer[position++], buffer, readString);\n        const valuePosition = buffer[position];\n        const value = valuePosition === 0 ? null : convertNode(valuePosition, buffer, readString);\n        return {\n            type: 'PropertyDefinition',\n            start,\n            end,\n            static: isStatic,\n            computed,\n            key,\n            value\n        };\n    },\n    function restElement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const argument = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'RestElement',\n            start,\n            end,\n            argument\n        };\n    },\n    function returnStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const argumentPosition = buffer[position];\n        const argument = argumentPosition === 0 ? null : convertNode(argumentPosition, buffer, readString);\n        return {\n            type: 'ReturnStatement',\n            start,\n            end,\n            argument\n        };\n    },\n    function sequenceExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const expressions = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'SequenceExpression',\n            start,\n            end,\n            expressions\n        };\n    },\n    function spreadElement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const argument = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'SpreadElement',\n            start,\n            end,\n            argument\n        };\n    },\n    function staticBlock(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const body = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'StaticBlock',\n            start,\n            end,\n            body\n        };\n    },\n    function superElement(position, buffer) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        return {\n            type: 'Super',\n            start,\n            end\n        };\n    },\n    function switchCase(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const testPosition = buffer[position++];\n        const test = testPosition === 0 ? null : convertNode(testPosition, buffer, readString);\n        const consequent = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'SwitchCase',\n            start,\n            end,\n            test,\n            consequent\n        };\n    },\n    function switchStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const discriminant = convertNode(buffer[position++], buffer, readString);\n        const cases = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'SwitchStatement',\n            start,\n            end,\n            discriminant,\n            cases\n        };\n    },\n    function taggedTemplateExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const tag = convertNode(buffer[position++], buffer, readString);\n        const quasi = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'TaggedTemplateExpression',\n            start,\n            end,\n            tag,\n            quasi\n        };\n    },\n    function templateElement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const tail = (flags & 1) === 1;\n        const cookedPosition = buffer[position++];\n        const cooked = cookedPosition === 0 ? undefined : convertString(cookedPosition, buffer, readString);\n        const raw = convertString(buffer[position], buffer, readString);\n        return {\n            type: 'TemplateElement',\n            start,\n            end,\n            tail,\n            value: { cooked, raw }\n        };\n    },\n    function templateLiteral(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const quasis = convertNodeList(buffer[position++], buffer, readString);\n        const expressions = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'TemplateLiteral',\n            start,\n            end,\n            quasis,\n            expressions\n        };\n    },\n    function thisExpression(position, buffer) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        return {\n            type: 'ThisExpression',\n            start,\n            end\n        };\n    },\n    function throwStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const argument = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'ThrowStatement',\n            start,\n            end,\n            argument\n        };\n    },\n    function tryStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const block = convertNode(buffer[position++], buffer, readString);\n        const handlerPosition = buffer[position++];\n        const handler = handlerPosition === 0 ? null : convertNode(handlerPosition, buffer, readString);\n        const finalizerPosition = buffer[position];\n        const finalizer = finalizerPosition === 0 ? null : convertNode(finalizerPosition, buffer, readString);\n        return {\n            type: 'TryStatement',\n            start,\n            end,\n            block,\n            handler,\n            finalizer\n        };\n    },\n    function unaryExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const operator = FIXED_STRINGS[buffer[position++]];\n        const argument = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'UnaryExpression',\n            start,\n            end,\n            operator,\n            argument,\n            prefix: true\n        };\n    },\n    function updateExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const prefix = (flags & 1) === 1;\n        const operator = FIXED_STRINGS[buffer[position++]];\n        const argument = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'UpdateExpression',\n            start,\n            end,\n            prefix,\n            operator,\n            argument\n        };\n    },\n    function variableDeclaration(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const kind = FIXED_STRINGS[buffer[position++]];\n        const declarations = convertNodeList(buffer[position], buffer, readString);\n        return {\n            type: 'VariableDeclaration',\n            start,\n            end,\n            kind,\n            declarations\n        };\n    },\n    function variableDeclarator(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const id = convertNode(buffer[position++], buffer, readString);\n        const initPosition = buffer[position];\n        const init = initPosition === 0 ? null : convertNode(initPosition, buffer, readString);\n        return {\n            type: 'VariableDeclarator',\n            start,\n            end,\n            id,\n            init\n        };\n    },\n    function whileStatement(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const test = convertNode(buffer[position++], buffer, readString);\n        const body = convertNode(buffer[position], buffer, readString);\n        return {\n            type: 'WhileStatement',\n            start,\n            end,\n            test,\n            body\n        };\n    },\n    function yieldExpression(position, buffer, readString) {\n        const start = buffer[position++];\n        const end = buffer[position++];\n        const flags = buffer[position++];\n        const delegate = (flags & 1) === 1;\n        const argumentPosition = buffer[position];\n        const argument = argumentPosition === 0 ? null : convertNode(argumentPosition, buffer, readString);\n        return {\n            type: 'YieldExpression',\n            start,\n            end,\n            delegate,\n            argument\n        };\n    }\n];\nfunction convertNode(position, buffer, readString) {\n    const nodeType = buffer[position];\n    const converter = nodeConverters[nodeType];\n    /* istanbul ignore if: This should never be executed but is a safeguard against faulty buffers */\n    if (!converter) {\n        console.trace();\n        throw new Error(`Unknown node type: ${nodeType}`);\n    }\n    return converter(position + 1, buffer, readString);\n}\nfunction convertNodeList(position, buffer, readString) {\n    if (position === 0)\n        return EMPTY_ARRAY;\n    const length = buffer[position++];\n    const list = [];\n    for (let index = 0; index < length; index++) {\n        const nodePosition = buffer[position++];\n        list.push(nodePosition ? convertNode(nodePosition, buffer, readString) : null);\n    }\n    return list;\n}\n\nfunction getReadStringFunction(astBuffer) {\n    if (typeof Buffer !== 'undefined' && astBuffer instanceof Buffer) {\n        return function readString(start, length) {\n            return astBuffer.toString('utf8', start, start + length);\n        };\n    }\n    else {\n        const textDecoder = new TextDecoder();\n        return function readString(start, length) {\n            return textDecoder.decode(astBuffer.subarray(start, start + length));\n        };\n    }\n}\n\nconst parseAst = (input, { allowReturnOutsideFunction = false } = {}) => {\n    const astBuffer = parse(input, allowReturnOutsideFunction);\n    return convertProgram(astBuffer.buffer, getReadStringFunction(astBuffer));\n};\nconst parseAstAsync = async (input, { allowReturnOutsideFunction = false, signal } = {}) => {\n    const astBuffer = await parseAsync(input, allowReturnOutsideFunction, signal);\n    return convertProgram(astBuffer.buffer, getReadStringFunction(astBuffer));\n};\n\nexport { ANNOTATION_KEY, ArrowFunctionExpression, BLANK, BlockStatement, CallExpression, CatchClause, EMPTY_ARRAY, EMPTY_OBJECT, EMPTY_SET, ExportDefaultDeclaration, ExpressionStatement, FIXED_STRINGS, INVALID_ANNOTATION_KEY, Identifier, LOGLEVEL_DEBUG, LOGLEVEL_ERROR, LOGLEVEL_INFO, LOGLEVEL_WARN, Literal, Program, Property, ReturnStatement, TemplateLiteral, URL_OUTPUT_AMD_BASEPATH, URL_OUTPUT_AMD_ID, URL_OUTPUT_DIR, URL_OUTPUT_EXTERNALIMPORTATTRIBUTES, URL_OUTPUT_FORMAT, URL_OUTPUT_GENERATEDCODE, URL_OUTPUT_INLINEDYNAMICIMPORTS, URL_OUTPUT_INTEROP, URL_OUTPUT_MANUALCHUNKS, URL_OUTPUT_SOURCEMAPBASEURL, URL_OUTPUT_SOURCEMAPFILE, URL_PRESERVEENTRYSIGNATURES, URL_TREESHAKE, URL_TREESHAKE_MODULESIDEEFFECTS, URL_WATCH, VariableDeclarator, addTrailingSlashIfMissed, augmentCodeLocation, augmentLogMessage, convertAnnotations, convertNode, convertString, error, getAliasName, getImportPath, getReadStringFunction, getRollupError, isAbsolute, isPathFragment, isRelative, isValidUrl, locate, logAddonNotGenerated, logAlreadyClosed, logAmbiguousExternalNamespaces, logAnonymousPluginCache, logAssetNotFinalisedForFileName, logAssetReferenceIdNotFoundForSetSource, logAssetSourceAlreadySet, logBadLoader, logCannotAssignModuleToChunk, logCannotCallNamespace, logCannotEmitFromOptionsHook, logChunkInvalid, logChunkNotGeneratedForFileName, logCircularDependency, logCircularReexport, logConflictingSourcemapSources, logConstVariableReassignError, logCyclicCrossChunkReexport, logDuplicateArgumentNameError, logDuplicateExportError, logDuplicatePluginName, logEmptyChunk, logEntryCannotBeExternal, logEval, logExternalModulesCannotBeIncludedInManualChunks, logExternalModulesCannotBeTransformedToModules, logExternalSyntheticExports, logFailedValidation, logFileNameConflict, logFileReferenceIdNotFoundForFilename, logFirstSideEffect, logIllegalIdentifierAsName, logIllegalImportReassignment, logImplicitDependantCannotBeExternal, logImplicitDependantIsNotIncluded, logImportAttributeIsInvalid, logImportOptionsAreInvalid, logIncompatibleExportOptionValue, logInconsistentImportAttributes, logInputHookInOutputPlugin, logInternalIdCannotBeExternal, logInvalidAddonPluginHook, logInvalidAnnotation, logInvalidExportOptionValue, logInvalidFormatForTopLevelAwait, logInvalidFunctionPluginHook, logInvalidLogPosition, logInvalidOption, logInvalidRollupPhaseForChunkEmission, logInvalidSetAssetSourceCall, logInvalidSourcemapForError, logLevelPriority, logMissingEntryExport, logMissingExport, logMissingFileOrDirOption, logMissingGlobalName, logMissingNameOptionForIifeExport, logMissingNameOptionForUmdExport, logMissingNodeBuiltins, logMixedExport, logModuleLevelDirective, logModuleParseError, logNamespaceConflict, logNoAssetSourceSet, logNoTransformMapOrAstWithoutCode, logOptimizeChunkStatus, logParseError, logPluginError, logRedeclarationError, logShimmedExport, logSourcemapBroken, logSyntheticNamedExportsNeedNamespaceExport, logThisIsUndefined, logUnexpectedNamedImport, logUnexpectedNamespaceReexport, logUnknownOption, logUnresolvedEntry, logUnresolvedImplicitDependant, logUnresolvedImport, logUnresolvedImportTreatedAsExternal, logUnusedExternalImports, normalize, parseAst, parseAstAsync, printQuotedStringList, relative, relativeId, warnDeprecation };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}