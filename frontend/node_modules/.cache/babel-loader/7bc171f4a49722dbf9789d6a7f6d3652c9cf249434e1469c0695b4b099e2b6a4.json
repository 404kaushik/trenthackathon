{"ast":null,"code":"var _jsxFileName = \"/Users/kaushiknag/trenthackathon/src/pages/Stars.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stars = ({\n  starCount = 100,\n  shootingStarCount = 5\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const geometry = new THREE.BufferGeometry();\n    const vertices = [];\n    for (let i = 0; i < starCount; i++) {\n      vertices.push(THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000));\n    }\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n    const material = new THREE.PointsMaterial({\n      color: 0xffffff,\n      size: 2\n    });\n    const stars = new THREE.Points(geometry, material);\n    scene.add(stars);\n    const shootingStars = [];\n    for (let i = 0; i < shootingStarCount; i++) {\n      const starGeometry = new THREE.SphereGeometry(0.1, 24, 24);\n      const starMaterial = new THREE.MeshBasicMaterial({\n        color: 0xffffff\n      });\n      const shootingStar = new THREE.Mesh(starGeometry, starMaterial);\n      shootingStar.position.set(THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000));\n      shootingStars.push(shootingStar);\n      scene.add(shootingStar);\n    }\n    camera.position.z = 5;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      stars.rotation.x += 0.001;\n      stars.rotation.y += 0.001;\n      shootingStars.forEach(star => {\n        star.position.x -= 0.1;\n        star.position.y -= 0.1;\n        if (star.position.x < -1000 || star.position.y < -1000) {\n          star.position.set(THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000));\n        }\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [starCount, shootingStarCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    className: \"fixed inset-0 overflow-hidden pointer-events-none\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 12\n  }, this);\n};\n_s(Stars, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = Stars;\nexport default Stars;\nvar _c;\n$RefreshReg$(_c, \"Stars\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","Stars","starCount","shootingStarCount","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","geometry","BufferGeometry","vertices","i","push","MathUtils","randFloatSpread","setAttribute","Float32BufferAttribute","material","PointsMaterial","color","size","stars","Points","add","shootingStars","starGeometry","SphereGeometry","starMaterial","MeshBasicMaterial","shootingStar","Mesh","position","set","z","animate","requestAnimationFrame","rotation","x","y","forEach","star","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeChild","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kaushiknag/trenthackathon/src/pages/Stars.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst Stars = ({ starCount = 100, shootingStarCount = 5 }) => {\n    const mountRef = useRef(null);\n\n    useEffect(() => {\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        mountRef.current.appendChild(renderer.domElement);\n\n        const geometry = new THREE.BufferGeometry();\n        const vertices = [];\n\n        for (let i = 0; i < starCount; i++) {\n            vertices.push(\n                THREE.MathUtils.randFloatSpread(2000),\n                THREE.MathUtils.randFloatSpread(2000),\n                THREE.MathUtils.randFloatSpread(2000)\n            );\n        }\n\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n        const material = new THREE.PointsMaterial({ color: 0xffffff, size: 2 });\n        const stars = new THREE.Points(geometry, material);\n        scene.add(stars);\n\n        const shootingStars = [];\n        for (let i = 0; i < shootingStarCount; i++) {\n            const starGeometry = new THREE.SphereGeometry(0.1, 24, 24);\n            const starMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\n            const shootingStar = new THREE.Mesh(starGeometry, starMaterial);\n            shootingStar.position.set(\n                THREE.MathUtils.randFloatSpread(2000),\n                THREE.MathUtils.randFloatSpread(2000),\n                THREE.MathUtils.randFloatSpread(2000)\n            );\n            shootingStars.push(shootingStar);\n            scene.add(shootingStar);\n        }\n\n        camera.position.z = 5;\n\n        const animate = () => {\n            requestAnimationFrame(animate);\n\n            stars.rotation.x += 0.001;\n            stars.rotation.y += 0.001;\n\n            shootingStars.forEach((star) => {\n                star.position.x -= 0.1;\n                star.position.y -= 0.1;\n                if (star.position.x < -1000 || star.position.y < -1000) {\n                    star.position.set(\n                        THREE.MathUtils.randFloatSpread(2000),\n                        THREE.MathUtils.randFloatSpread(2000),\n                        THREE.MathUtils.randFloatSpread(2000)\n                    );\n                }\n            });\n\n            renderer.render(scene, camera);\n        };\n\n        animate();\n\n        const handleResize = () => {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            mountRef.current.removeChild(renderer.domElement);\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [starCount, shootingStarCount]);\n\n    return <div ref={mountRef} className=\"fixed inset-0 overflow-hidden pointer-events-none\"></div>;\n};\n\nexport default Stars;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}