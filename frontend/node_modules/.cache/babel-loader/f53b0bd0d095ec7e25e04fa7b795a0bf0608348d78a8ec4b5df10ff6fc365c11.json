{"ast":null,"code":"var _jsxFileName = \"/Users/kaushiknag/trenthackathon/src/pages/Stars.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stars = ({\n  starCount = 1000\n}) => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n    const starGeometry = new THREE.BufferGeometry();\n    const starMaterial = new THREE.PointsMaterial({\n      color: 0xffffff\n    });\n    const starVertices = [];\n    for (let i = 0; i < starCount; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = (Math.random() - 0.5) * 2000;\n      starVertices.push(x, y, z);\n    }\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\n    const stars = new THREE.Points(starGeometry, starMaterial);\n    scene.add(stars);\n    camera.position.z = 1000;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      stars.rotation.x += 0.0005;\n      stars.rotation.y += 0.0005;\n      renderer.render(scene, camera);\n    };\n    animate();\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [starCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_s(Stars, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = Stars;\nexport default Stars;\nvar _c;\n$RefreshReg$(_c, \"Stars\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","Stars","starCount","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","starGeometry","BufferGeometry","starMaterial","PointsMaterial","color","starVertices","i","x","Math","random","y","z","push","setAttribute","Float32BufferAttribute","stars","Points","add","position","animate","requestAnimationFrame","rotation","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kaushiknag/trenthackathon/src/pages/Stars.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst Stars = ({ starCount = 1000 }) => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    const starGeometry = new THREE.BufferGeometry();\n    const starMaterial = new THREE.PointsMaterial({ color: 0xffffff });\n\n    const starVertices = [];\n    for (let i = 0; i < starCount; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = (Math.random() - 0.5) * 2000;\n      starVertices.push(x, y, z);\n    }\n\n    starGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starVertices, 3));\n    const stars = new THREE.Points(starGeometry, starMaterial);\n    scene.add(stars);\n\n    camera.position.z = 1000;\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      stars.rotation.x += 0.0005;\n      stars.rotation.y += 0.0005;\n\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, [starCount]);\n\n  return <div ref={mountRef} />;\n};\n\nexport default Stars;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}